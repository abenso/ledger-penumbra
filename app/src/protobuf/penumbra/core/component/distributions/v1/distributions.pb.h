/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.9 */

#ifndef PB_PENUMBRA_CORE_COMPONENT_DISTRIBUTIONS_V1_PENUMBRA_CORE_COMPONENT_DISTRIBUTIONS_V1_DISTRIBUTIONS_PB_H_INCLUDED
#define PB_PENUMBRA_CORE_COMPONENT_DISTRIBUTIONS_V1_PENUMBRA_CORE_COMPONENT_DISTRIBUTIONS_V1_DISTRIBUTIONS_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
/* Distribution configuration data. */
typedef struct _penumbra_core_component_distributions_v1_DistributionsParameters {
    /* The amount of staking token issued per block. */
    uint64_t staking_issuance_per_block;
    /* The amount of staking token flowing from the community pool to the liquidity tournament each block. */
    uint64_t liquidity_tournament_incentive_per_block;
    /* If non-zero, no rewards will be distributed at a height >= this height. */
    uint64_t liquidity_tournament_end_block;
} penumbra_core_component_distributions_v1_DistributionsParameters;

#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define penumbra_core_component_distributions_v1_DistributionsParameters_init_default \
    { 0, 0, 0 }
#define penumbra_core_component_distributions_v1_DistributionsParameters_init_zero \
    { 0, 0, 0 }

/* Field tags (for use in manual encoding/decoding) */
#define penumbra_core_component_distributions_v1_DistributionsParameters_staking_issuance_per_block_tag 1
#define penumbra_core_component_distributions_v1_DistributionsParameters_liquidity_tournament_incentive_per_block_tag 2
#define penumbra_core_component_distributions_v1_DistributionsParameters_liquidity_tournament_end_block_tag 3

/* Struct field encoding specification for nanopb */
#define penumbra_core_component_distributions_v1_DistributionsParameters_FIELDLIST(X, a) \
    X(a, STATIC, SINGULAR, UINT64, staking_issuance_per_block, 1)                        \
    X(a, STATIC, SINGULAR, UINT64, liquidity_tournament_incentive_per_block, 2)          \
    X(a, STATIC, SINGULAR, UINT64, liquidity_tournament_end_block, 3)
#define penumbra_core_component_distributions_v1_DistributionsParameters_CALLBACK NULL
#define penumbra_core_component_distributions_v1_DistributionsParameters_DEFAULT NULL

extern const pb_msgdesc_t penumbra_core_component_distributions_v1_DistributionsParameters_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define penumbra_core_component_distributions_v1_DistributionsParameters_fields \
    &penumbra_core_component_distributions_v1_DistributionsParameters_msg

/* Maximum encoded size of messages (where known) */
#define PENUMBRA_CORE_COMPONENT_DISTRIBUTIONS_V1_PENUMBRA_CORE_COMPONENT_DISTRIBUTIONS_V1_DISTRIBUTIONS_PB_H_MAX_SIZE \
    penumbra_core_component_distributions_v1_DistributionsParameters_size
#define penumbra_core_component_distributions_v1_DistributionsParameters_size 33

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
