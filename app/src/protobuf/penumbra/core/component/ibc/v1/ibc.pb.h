/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.9 */

#ifndef PB_PENUMBRA_CORE_COMPONENT_IBC_V1_PENUMBRA_CORE_COMPONENT_IBC_V1_IBC_PB_H_INCLUDED
#define PB_PENUMBRA_CORE_COMPONENT_IBC_V1_PENUMBRA_CORE_COMPONENT_IBC_V1_IBC_PB_H_INCLUDED
#include <pb.h>

#include "google/protobuf/any.pb.h"
#include "ibc/core/client/v1/client.pb.h"
#include "penumbra/core/asset/v1/asset.pb.h"
#include "penumbra/core/keys/v1/keys.pb.h"
#include "penumbra/core/num/v1/num.pb.h"

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _penumbra_core_component_ibc_v1_IbcRelay {
    bool has_raw_action;
    google_protobuf_Any raw_action;
} penumbra_core_component_ibc_v1_IbcRelay;

/* A Penumbra transaction action requesting an ICS20 transfer. */
typedef struct _penumbra_core_component_ibc_v1_Ics20Withdrawal {
    bool has_amount;
    penumbra_core_num_v1_Amount amount;
    bool has_denom;
    penumbra_core_asset_v1_Denom denom;
    /* the address on the destination chain to send the transfer to */
    pb_callback_t destination_chain_address;
    /* a "sender" penumbra address to use to return funds from this withdrawal.
 this should be an ephemeral address */
    bool has_return_address;
    penumbra_core_keys_v1_Address return_address;
    /* The height on the counterparty chain at which this transfer expires, and
 funds are sent back to the return address. */
    bool has_timeout_height;
    ibc_core_client_v1_Height timeout_height;
    /* The timestamp, in epoch time, after which this transfer will be considered invalid.
 Clients must quantize this value to the nearest minute, to preserve privacy.
 IBC withdrawals that do not quantize timestamps will be rejected. */
    uint64_t timeout_time;
    /* The source channel used for the withdrawal */
    pb_callback_t source_channel;
    /* Whether to use a "compat" (bech32, non-m) address for the return address in the withdrawal,
 for compatability with chains that expect to be able to parse the return address as bech32. */
    bool use_compat_address;
    /* Arbitrary string data to be included in the `memo` field
 of the ICS-20 FungibleTokenPacketData for this withdrawal.
 Commonly used for packet forwarding support, or other protocols that may support usage of the memo field. */
    pb_callback_t ics20_memo;
    /* Whether to use a transparent address (bech32, 32-byte) for the return address in the withdrawal. */
    bool use_transparent_address;
} penumbra_core_component_ibc_v1_Ics20Withdrawal;

/* IBC configuration data. */
typedef struct _penumbra_core_component_ibc_v1_IbcParameters {
    /* Whether IBC (forming connections, processing IBC packets) is enabled. */
    bool ibc_enabled;
    /* Whether inbound ICS-20 transfers are enabled */
    bool inbound_ics20_transfers_enabled;
    /* Whether outbound ICS-20 transfers are enabled */
    bool outbound_ics20_transfers_enabled;
} penumbra_core_component_ibc_v1_IbcParameters;

#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define penumbra_core_component_ibc_v1_IbcRelay_init_default \
    { false, google_protobuf_Any_init_default }
#define penumbra_core_component_ibc_v1_Ics20Withdrawal_init_default                                                        \
    {                                                                                                                      \
        false, penumbra_core_num_v1_Amount_init_default, false, penumbra_core_asset_v1_Denom_init_default, {{NULL}, NULL}, \
            false, penumbra_core_keys_v1_Address_init_default, false, ibc_core_client_v1_Height_init_default, 0,           \
            {{NULL}, NULL}, 0, {{NULL}, NULL}, 0                                                                           \
    }
#define penumbra_core_component_ibc_v1_IbcParameters_init_default \
    { 0, 0, 0 }
#define penumbra_core_component_ibc_v1_IbcRelay_init_zero \
    { false, google_protobuf_Any_init_zero }
#define penumbra_core_component_ibc_v1_Ics20Withdrawal_init_zero                                                            \
    {                                                                                                                       \
        false, penumbra_core_num_v1_Amount_init_zero, false, penumbra_core_asset_v1_Denom_init_zero, {{NULL}, NULL}, false, \
            penumbra_core_keys_v1_Address_init_zero, false, ibc_core_client_v1_Height_init_zero, 0, {{NULL}, NULL}, 0,      \
            {{NULL}, NULL}, 0                                                                                               \
    }
#define penumbra_core_component_ibc_v1_IbcParameters_init_zero \
    { 0, 0, 0 }

/* Field tags (for use in manual encoding/decoding) */
#define penumbra_core_component_ibc_v1_IbcRelay_raw_action_tag 1
#define penumbra_core_component_ibc_v1_Ics20Withdrawal_amount_tag 1
#define penumbra_core_component_ibc_v1_Ics20Withdrawal_denom_tag 2
#define penumbra_core_component_ibc_v1_Ics20Withdrawal_destination_chain_address_tag 3
#define penumbra_core_component_ibc_v1_Ics20Withdrawal_return_address_tag 4
#define penumbra_core_component_ibc_v1_Ics20Withdrawal_timeout_height_tag 5
#define penumbra_core_component_ibc_v1_Ics20Withdrawal_timeout_time_tag 6
#define penumbra_core_component_ibc_v1_Ics20Withdrawal_source_channel_tag 7
#define penumbra_core_component_ibc_v1_Ics20Withdrawal_use_compat_address_tag 8
#define penumbra_core_component_ibc_v1_Ics20Withdrawal_ics20_memo_tag 9
#define penumbra_core_component_ibc_v1_Ics20Withdrawal_use_transparent_address_tag 10
#define penumbra_core_component_ibc_v1_IbcParameters_ibc_enabled_tag 1
#define penumbra_core_component_ibc_v1_IbcParameters_inbound_ics20_transfers_enabled_tag 2
#define penumbra_core_component_ibc_v1_IbcParameters_outbound_ics20_transfers_enabled_tag 3

/* Struct field encoding specification for nanopb */
#define penumbra_core_component_ibc_v1_IbcRelay_FIELDLIST(X, a) X(a, STATIC, OPTIONAL, MESSAGE, raw_action, 1)
#define penumbra_core_component_ibc_v1_IbcRelay_CALLBACK NULL
#define penumbra_core_component_ibc_v1_IbcRelay_DEFAULT NULL
#define penumbra_core_component_ibc_v1_IbcRelay_raw_action_MSGTYPE google_protobuf_Any

#define penumbra_core_component_ibc_v1_Ics20Withdrawal_FIELDLIST(X, a) \
    X(a, STATIC, OPTIONAL, MESSAGE, amount, 1)                         \
    X(a, STATIC, OPTIONAL, MESSAGE, denom, 2)                          \
    X(a, CALLBACK, SINGULAR, STRING, destination_chain_address, 3)     \
    X(a, STATIC, OPTIONAL, MESSAGE, return_address, 4)                 \
    X(a, STATIC, OPTIONAL, MESSAGE, timeout_height, 5)                 \
    X(a, STATIC, SINGULAR, UINT64, timeout_time, 6)                    \
    X(a, CALLBACK, SINGULAR, STRING, source_channel, 7)                \
    X(a, STATIC, SINGULAR, BOOL, use_compat_address, 8)                \
    X(a, CALLBACK, SINGULAR, STRING, ics20_memo, 9)                    \
    X(a, STATIC, SINGULAR, BOOL, use_transparent_address, 10)
#define penumbra_core_component_ibc_v1_Ics20Withdrawal_CALLBACK pb_default_field_callback
#define penumbra_core_component_ibc_v1_Ics20Withdrawal_DEFAULT NULL
#define penumbra_core_component_ibc_v1_Ics20Withdrawal_amount_MSGTYPE penumbra_core_num_v1_Amount
#define penumbra_core_component_ibc_v1_Ics20Withdrawal_denom_MSGTYPE penumbra_core_asset_v1_Denom
#define penumbra_core_component_ibc_v1_Ics20Withdrawal_return_address_MSGTYPE penumbra_core_keys_v1_Address
#define penumbra_core_component_ibc_v1_Ics20Withdrawal_timeout_height_MSGTYPE ibc_core_client_v1_Height

#define penumbra_core_component_ibc_v1_IbcParameters_FIELDLIST(X, a) \
    X(a, STATIC, SINGULAR, BOOL, ibc_enabled, 1)                     \
    X(a, STATIC, SINGULAR, BOOL, inbound_ics20_transfers_enabled, 2) \
    X(a, STATIC, SINGULAR, BOOL, outbound_ics20_transfers_enabled, 3)
#define penumbra_core_component_ibc_v1_IbcParameters_CALLBACK NULL
#define penumbra_core_component_ibc_v1_IbcParameters_DEFAULT NULL

extern const pb_msgdesc_t penumbra_core_component_ibc_v1_IbcRelay_msg;
extern const pb_msgdesc_t penumbra_core_component_ibc_v1_Ics20Withdrawal_msg;
extern const pb_msgdesc_t penumbra_core_component_ibc_v1_IbcParameters_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define penumbra_core_component_ibc_v1_IbcRelay_fields &penumbra_core_component_ibc_v1_IbcRelay_msg
#define penumbra_core_component_ibc_v1_Ics20Withdrawal_fields &penumbra_core_component_ibc_v1_Ics20Withdrawal_msg
#define penumbra_core_component_ibc_v1_IbcParameters_fields &penumbra_core_component_ibc_v1_IbcParameters_msg

/* Maximum encoded size of messages (where known) */
/* penumbra_core_component_ibc_v1_Ics20Withdrawal_size depends on runtime parameters */
#if defined(google_protobuf_Any_size)
#define PENUMBRA_CORE_COMPONENT_IBC_V1_PENUMBRA_CORE_COMPONENT_IBC_V1_IBC_PB_H_MAX_SIZE \
    penumbra_core_component_ibc_v1_IbcRelay_size
#define penumbra_core_component_ibc_v1_IbcRelay_size (6 + google_protobuf_Any_size)
#endif
#define penumbra_core_component_ibc_v1_IbcParameters_size 6

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
