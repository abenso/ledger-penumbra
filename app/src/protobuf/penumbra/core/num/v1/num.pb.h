/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.9 */

#ifndef PB_PENUMBRA_CORE_NUM_V1_PENUMBRA_CORE_NUM_V1_NUM_PB_H_INCLUDED
#define PB_PENUMBRA_CORE_NUM_V1_PENUMBRA_CORE_NUM_V1_NUM_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
/* The quantity of a particular Asset. Represented as a 128-bit unsigned integer,
 split over two fields, `lo` and `hi`, representing the low- and high-order bytes
 of the 128-bit value, respectively. Clients must assemble these bits in their
 implementation into a `uint128` or comparable data structure, in order to model
 the Amount accurately. */
typedef struct _penumbra_core_num_v1_Amount {
    uint64_t lo;
    uint64_t hi;
} penumbra_core_num_v1_Amount;

#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define penumbra_core_num_v1_Amount_init_default \
    { 0, 0 }
#define penumbra_core_num_v1_Amount_init_zero \
    { 0, 0 }

/* Field tags (for use in manual encoding/decoding) */
#define penumbra_core_num_v1_Amount_lo_tag 1
#define penumbra_core_num_v1_Amount_hi_tag 2

/* Struct field encoding specification for nanopb */
#define penumbra_core_num_v1_Amount_FIELDLIST(X, a) \
    X(a, STATIC, SINGULAR, UINT64, lo, 1)           \
    X(a, STATIC, SINGULAR, UINT64, hi, 2)
#define penumbra_core_num_v1_Amount_CALLBACK NULL
#define penumbra_core_num_v1_Amount_DEFAULT NULL

extern const pb_msgdesc_t penumbra_core_num_v1_Amount_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define penumbra_core_num_v1_Amount_fields &penumbra_core_num_v1_Amount_msg

/* Maximum encoded size of messages (where known) */
#define PENUMBRA_CORE_NUM_V1_PENUMBRA_CORE_NUM_V1_NUM_PB_H_MAX_SIZE penumbra_core_num_v1_Amount_size
#define penumbra_core_num_v1_Amount_size 22

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
