/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.9 */

#ifndef PB_PENUMBRA_CORE_TRANSACTION_V1_PENUMBRA_CORE_TRANSACTION_V1_TRANSACTION_PB_H_INCLUDED
#define PB_PENUMBRA_CORE_TRANSACTION_V1_PENUMBRA_CORE_TRANSACTION_V1_TRANSACTION_PB_H_INCLUDED
#include <pb.h>

#include "google/protobuf/any.pb.h"
#include "penumbra/core/asset/v1/asset.pb.h"
#include "penumbra/core/component/auction/v1/auction.pb.h"
#include "penumbra/core/component/dex/v1/dex.pb.h"
#include "penumbra/core/component/fee/v1/fee.pb.h"
#include "penumbra/core/component/governance/v1/governance.pb.h"
#include "penumbra/core/component/ibc/v1/ibc.pb.h"
#include "penumbra/core/component/sct/v1/sct.pb.h"
#include "penumbra/core/component/shielded_pool/v1/shielded_pool.pb.h"
#include "penumbra/core/component/stake/v1/stake.pb.h"
#include "penumbra/core/keys/v1/keys.pb.h"
#include "penumbra/core/txhash/v1/txhash.pb.h"
#include "penumbra/crypto/decaf377_fmd/v1/decaf377_fmd.pb.h"
#include "penumbra/crypto/decaf377_rdsa/v1/decaf377_rdsa.pb.h"
#include "penumbra/crypto/tct/v1/tct.pb.h"

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
/* The parameters determining if a transaction should be accepted by the chain. */
typedef struct _penumbra_core_transaction_v1_TransactionParameters {
    /* The maximum height that this transaction can be included in the chain.

 If zero, there is no maximum. */
    uint64_t expiry_height;
    /* The chain this transaction is intended for.  Including this prevents
 replaying a transaction on one chain onto a different chain. */
    pb_callback_t chain_id;
    /* The transaction fee. */
    bool has_fee;
    penumbra_core_component_fee_v1_Fee fee;
} penumbra_core_transaction_v1_TransactionParameters;

/* Represents a transaction summary containing multiple effects. */
typedef struct _penumbra_core_transaction_v1_TransactionSummary {
    pb_callback_t effects;
} penumbra_core_transaction_v1_TransactionSummary;

/* Represents an individual effect of a transaction. */
typedef struct _penumbra_core_transaction_v1_TransactionSummary_Effects {
    bool has_address;
    penumbra_core_keys_v1_AddressView address;
    bool has_balance;
    penumbra_core_asset_v1_Balance balance;
} penumbra_core_transaction_v1_TransactionSummary_Effects;

/* Detection data used by a detection server performing Fuzzy Message Detection. */
typedef struct _penumbra_core_transaction_v1_DetectionData {
    /* A list of clues for use with Fuzzy Message Detection. */
    pb_callback_t fmd_clues;
} penumbra_core_transaction_v1_DetectionData;

/* A state change performed by a transaction. */
typedef struct _penumbra_core_transaction_v1_Action {
    pb_size_t which_action;
    union {
        /* Common actions have numbers < 15, to save space. */
        penumbra_core_component_shielded_pool_v1_Spend spend;
        penumbra_core_component_shielded_pool_v1_Output output;
        penumbra_core_component_dex_v1_Swap swap;
        penumbra_core_component_dex_v1_SwapClaim swap_claim;
        penumbra_core_component_stake_v1_ValidatorDefinition validator_definition;
        penumbra_core_component_ibc_v1_IbcRelay ibc_relay_action;
        /* Governance: */
        penumbra_core_component_governance_v1_ProposalSubmit proposal_submit;
        penumbra_core_component_governance_v1_ProposalWithdraw proposal_withdraw;
        penumbra_core_component_governance_v1_ValidatorVote validator_vote;
        penumbra_core_component_governance_v1_DelegatorVote delegator_vote;
        penumbra_core_component_governance_v1_ProposalDepositClaim proposal_deposit_claim;
        /* Positions */
        penumbra_core_component_dex_v1_PositionOpen position_open;
        penumbra_core_component_dex_v1_PositionClose position_close;
        penumbra_core_component_dex_v1_PositionWithdraw position_withdraw;
        penumbra_core_component_dex_v1_PositionRewardClaim position_reward_claim;
        /* (un)delegation */
        penumbra_core_component_stake_v1_Delegate delegate;
        penumbra_core_component_stake_v1_Undelegate undelegate;
        penumbra_core_component_stake_v1_UndelegateClaim undelegate_claim;
        /* Community Pool */
        penumbra_core_component_governance_v1_CommunityPoolSpend community_pool_spend;
        penumbra_core_component_governance_v1_CommunityPoolOutput community_pool_output;
        penumbra_core_component_governance_v1_CommunityPoolDeposit community_pool_deposit;
        /* Dutch auctions */
        penumbra_core_component_auction_v1_ActionDutchAuctionSchedule action_dutch_auction_schedule;
        penumbra_core_component_auction_v1_ActionDutchAuctionEnd action_dutch_auction_end;
        penumbra_core_component_auction_v1_ActionDutchAuctionWithdraw action_dutch_auction_withdraw;
        penumbra_core_component_ibc_v1_Ics20Withdrawal ics20_withdrawal;
    } action;
} penumbra_core_transaction_v1_Action;

/* A transaction perspective is a bundle of key material and commitment openings
 that allow generating a view of a transaction from that perspective. */
typedef struct _penumbra_core_transaction_v1_TransactionPerspective {
    pb_callback_t payload_keys;
    pb_callback_t spend_nullifiers;
    /* The openings of note commitments referred to in the transaction
 but not included in the transaction. */
    pb_callback_t advice_notes;
    /* Any relevant address views. */
    pb_callback_t address_views;
    /* Any relevant denoms for viewed assets. */
    pb_callback_t denoms;
    /* The transaction ID associated with this TransactionPerspective */
    bool has_transaction_id;
    penumbra_core_txhash_v1_TransactionId transaction_id;
    /* Any relevant estimated prices */
    pb_callback_t prices;
    /* Any relevant extended metadata, indexed by asset id. */
    pb_callback_t extended_metadata;
    pb_callback_t creation_transaction_ids_by_nullifier;
    pb_callback_t nullification_transaction_ids_by_commitment;
    /* Any relevant BatchSwapOutputData to the transaction.

 This can be used to fill in information about swap outputs. */
    pb_callback_t batch_swap_output_data;
} penumbra_core_transaction_v1_TransactionPerspective;

typedef struct _penumbra_core_transaction_v1_TransactionPerspective_ExtendedMetadataById {
    bool has_asset_id;
    penumbra_core_asset_v1_AssetId asset_id;
    bool has_extended_metadata;
    google_protobuf_Any extended_metadata;
} penumbra_core_transaction_v1_TransactionPerspective_ExtendedMetadataById;

/* Associates a nullifier with the transaction ID that created the nullified state commitment.

 Note: this is _not_ the transaction ID that revealed the nullifier.

 Allows walking backwards from a spend to the transaction that created the note. */
typedef struct _penumbra_core_transaction_v1_TransactionPerspective_CreationTransactionIdByNullifier {
    bool has_nullifier;
    penumbra_core_component_sct_v1_Nullifier nullifier;
    bool has_transaction_id;
    penumbra_core_txhash_v1_TransactionId transaction_id;
} penumbra_core_transaction_v1_TransactionPerspective_CreationTransactionIdByNullifier;

/* Associates a commitment with the transaction ID that eventually nullified it.

 Allows walking forwards from an output to the transaction that spent the note. */
typedef struct _penumbra_core_transaction_v1_TransactionPerspective_NullificationTransactionIdByCommitment {
    bool has_commitment;
    penumbra_crypto_tct_v1_StateCommitment commitment;
    bool has_transaction_id;
    penumbra_core_txhash_v1_TransactionId transaction_id;
} penumbra_core_transaction_v1_TransactionPerspective_NullificationTransactionIdByCommitment;

typedef struct _penumbra_core_transaction_v1_PayloadKeyWithCommitment {
    bool has_payload_key;
    penumbra_core_keys_v1_PayloadKey payload_key;
    bool has_commitment;
    penumbra_crypto_tct_v1_StateCommitment commitment;
} penumbra_core_transaction_v1_PayloadKeyWithCommitment;

typedef struct _penumbra_core_transaction_v1_NullifierWithNote {
    bool has_nullifier;
    penumbra_core_component_sct_v1_Nullifier nullifier;
    bool has_note;
    penumbra_core_component_shielded_pool_v1_Note note;
} penumbra_core_transaction_v1_NullifierWithNote;

/* A view of a specific state change action performed by a transaction. */
typedef struct _penumbra_core_transaction_v1_ActionView {
    pb_size_t which_action_view;
    union {
        /* Action types with visible/opaque variants */
        penumbra_core_component_shielded_pool_v1_SpendView spend;
        penumbra_core_component_shielded_pool_v1_OutputView output;
        penumbra_core_component_dex_v1_SwapView swap;
        penumbra_core_component_dex_v1_SwapClaimView swap_claim;
        /* Action types without visible/opaque variants */
        penumbra_core_component_stake_v1_ValidatorDefinition validator_definition;
        penumbra_core_component_ibc_v1_IbcRelay ibc_relay_action;
        /* Governance: */
        penumbra_core_component_governance_v1_ProposalSubmit proposal_submit;
        penumbra_core_component_governance_v1_ProposalWithdraw proposal_withdraw;
        penumbra_core_component_governance_v1_ValidatorVote validator_vote;
        penumbra_core_component_governance_v1_DelegatorVoteView delegator_vote;
        penumbra_core_component_governance_v1_ProposalDepositClaim proposal_deposit_claim;
        penumbra_core_component_dex_v1_PositionOpen position_open;
        penumbra_core_component_dex_v1_PositionClose position_close;
        penumbra_core_component_dex_v1_PositionWithdraw position_withdraw;
        penumbra_core_component_dex_v1_PositionRewardClaim position_reward_claim;
        penumbra_core_component_stake_v1_Delegate delegate;
        penumbra_core_component_stake_v1_Undelegate undelegate;
        /* TODO: we have no way to recover the opening of the undelegate_claim's
     balance commitment, and can only infer the value from looking at the rest
     of the transaction. is that fine? */
        penumbra_core_component_stake_v1_UndelegateClaim undelegate_claim;
        /* Community Pool */
        penumbra_core_component_governance_v1_CommunityPoolSpend community_pool_spend;
        penumbra_core_component_governance_v1_CommunityPoolOutput community_pool_output;
        penumbra_core_component_governance_v1_CommunityPoolDeposit community_pool_deposit;
        /* Dutch auctions */
        penumbra_core_component_auction_v1_ActionDutchAuctionScheduleView action_dutch_auction_schedule;
        penumbra_core_component_auction_v1_ActionDutchAuctionEnd action_dutch_auction_end;
        penumbra_core_component_auction_v1_ActionDutchAuctionWithdrawView action_dutch_auction_withdraw;
        penumbra_core_component_ibc_v1_Ics20Withdrawal ics20_withdrawal;
    } action_view;
} penumbra_core_transaction_v1_ActionView;

/* The data required to authorize a transaction plan. */
typedef struct _penumbra_core_transaction_v1_AuthorizationData {
    /* The computed auth hash for the approved transaction plan. */
    bool has_effect_hash;
    penumbra_core_txhash_v1_EffectHash effect_hash;
    /* The required spend authorizations, returned in the same order as the
 Spend actions in the original request. */
    pb_callback_t spend_auths;
    /* The required delegator vote authorizations, returned in the same order as the
 DelegatorVote actions in the original request. */
    pb_callback_t delegator_vote_auths;
} penumbra_core_transaction_v1_AuthorizationData;

/* The data required for proving when building a transaction from a plan. */
typedef struct _penumbra_core_transaction_v1_WitnessData {
    /* The anchor for the state transition proofs. */
    bool has_anchor;
    penumbra_crypto_tct_v1_MerkleRoot anchor;
    /* The auth paths for the notes the transaction spends, in the
 same order as the spends in the transaction plan. */
    pb_callback_t state_commitment_proofs;
} penumbra_core_transaction_v1_WitnessData;

typedef struct _penumbra_core_transaction_v1_DetectionDataPlan {
    pb_callback_t clue_plans;
} penumbra_core_transaction_v1_DetectionDataPlan;

/* Describes a planned transaction action.

 Some transaction Actions don't have any private data and are treated as being plans
 themselves. */
typedef struct _penumbra_core_transaction_v1_ActionPlan {
    pb_size_t which_action;
    union {
        penumbra_core_component_shielded_pool_v1_SpendPlan spend;
        penumbra_core_component_shielded_pool_v1_OutputPlan output;
        penumbra_core_component_dex_v1_SwapPlan swap;
        penumbra_core_component_dex_v1_SwapClaimPlan swap_claim;
        /* This is just a message relayed to the chain. */
        penumbra_core_component_stake_v1_ValidatorDefinition validator_definition;
        /* This is just a message relayed to the chain. */
        penumbra_core_component_ibc_v1_IbcRelay ibc_relay_action;
        /* Governance: */
        penumbra_core_component_governance_v1_ProposalSubmit proposal_submit;
        penumbra_core_component_governance_v1_ProposalWithdraw proposal_withdraw;
        penumbra_core_component_governance_v1_ValidatorVote validator_vote;
        penumbra_core_component_governance_v1_DelegatorVotePlan delegator_vote;
        penumbra_core_component_governance_v1_ProposalDepositClaim proposal_deposit_claim;
        penumbra_core_component_dex_v1_PositionOpen position_open;
        penumbra_core_component_dex_v1_PositionClose position_close;
        /* The position withdraw/reward claim actions require balance information so they have Plan types. */
        penumbra_core_component_dex_v1_PositionWithdrawPlan position_withdraw;
        penumbra_core_component_dex_v1_PositionRewardClaimPlan position_reward_claim;
        /* We don't need any extra information (yet) to understand delegations,
     because we don't yet use flow encryption. */
        penumbra_core_component_stake_v1_Delegate delegate;
        /* We don't need any extra information (yet) to understand undelegations,
     because we don't yet use flow encryption. */
        penumbra_core_component_stake_v1_Undelegate undelegate;
        penumbra_core_component_stake_v1_UndelegateClaimPlan undelegate_claim;
        /* Community Pool */
        penumbra_core_component_governance_v1_CommunityPoolSpend community_pool_spend;
        penumbra_core_component_governance_v1_CommunityPoolOutput community_pool_output;
        penumbra_core_component_governance_v1_CommunityPoolDeposit community_pool_deposit;
        /* Dutch auctions */
        penumbra_core_component_auction_v1_ActionDutchAuctionSchedule action_dutch_auction_schedule;
        penumbra_core_component_auction_v1_ActionDutchAuctionEnd action_dutch_auction_end;
        penumbra_core_component_auction_v1_ActionDutchAuctionWithdrawPlan action_dutch_auction_withdraw;
        penumbra_core_component_ibc_v1_Ics20Withdrawal ics20_withdrawal;
    } action;
} penumbra_core_transaction_v1_ActionPlan;

/* Describes a plan for forming a `Clue`. */
typedef struct _penumbra_core_transaction_v1_CluePlan {
    /* The address. */
    bool has_address;
    penumbra_core_keys_v1_Address address;
    /* The random seed to use for the clue plan. */
    pb_callback_t rseed;
    /* The bits of precision. */
    uint64_t precision_bits;
} penumbra_core_transaction_v1_CluePlan;

/* The encrypted memo data describing information about the purpose of a transaction. */
typedef struct _penumbra_core_transaction_v1_MemoCiphertext {
    /* The encrypted data. 528 bytes. */
    pb_callback_t inner;
} penumbra_core_transaction_v1_MemoCiphertext;

/* The body of a transaction. */
typedef struct _penumbra_core_transaction_v1_TransactionBody {
    /* A list of actions (state changes) performed by this transaction. */
    pb_callback_t actions;
    /* Parameters determining if a transaction should be accepted by this chain. */
    bool has_transaction_parameters;
    penumbra_core_transaction_v1_TransactionParameters transaction_parameters;
    /* Detection data for use with Fuzzy Message Detection */
    bool has_detection_data;
    penumbra_core_transaction_v1_DetectionData detection_data;
    /* The encrypted memo for this transaction.

 This field will be present if and only if the transaction has outputs. */
    bool has_memo;
    penumbra_core_transaction_v1_MemoCiphertext memo;
} penumbra_core_transaction_v1_TransactionBody;

/* A Penumbra transaction. */
typedef struct _penumbra_core_transaction_v1_Transaction {
    bool has_body;
    penumbra_core_transaction_v1_TransactionBody body;
    /* The binding signature is stored separately from the transaction body that it signs. */
    bool has_binding_sig;
    penumbra_crypto_decaf377_rdsa_v1_BindingSignature binding_sig;
    /* The root of some previous state of the state commitment tree, used as an anchor for all
 ZK state transition proofs. */
    bool has_anchor;
    penumbra_crypto_tct_v1_MerkleRoot anchor;
} penumbra_core_transaction_v1_Transaction;

/* The plaintext describing information about the purpose of a transaction. */
typedef struct _penumbra_core_transaction_v1_MemoPlaintext {
    /* The sender's return address.

 This should always be a valid address; the sender is responsible for ensuring
 that if the receiver returns funds to this address, they will not be lost. */
    bool has_return_address;
    penumbra_core_keys_v1_Address return_address;
    /* Free-form text, up to 432 bytes long. */
    pb_callback_t text;
} penumbra_core_transaction_v1_MemoPlaintext;

/* Describes a plan for forming the transaction memo. */
typedef struct _penumbra_core_transaction_v1_MemoPlan {
    /* The plaintext. */
    bool has_plaintext;
    penumbra_core_transaction_v1_MemoPlaintext plaintext;
    /* The key to use to encrypt the memo. */
    pb_callback_t key;
} penumbra_core_transaction_v1_MemoPlan;

/* Describes a planned transaction. Permits clients to prepare a transaction
 prior submission, so that a user can review it prior to authorizing its execution.

 The `TransactionPlan` is a fully determined bundle binding all of a transaction's effects.
 The only thing it does not include is the witness data used for proving. */
typedef struct _penumbra_core_transaction_v1_TransactionPlan {
    /* The sequence of actions planned for this transaction. */
    pb_callback_t actions;
    /* Parameters determining if a transaction should be accepted by this chain. */
    bool has_transaction_parameters;
    penumbra_core_transaction_v1_TransactionParameters transaction_parameters;
    /* Detection data for use with Fuzzy Message Detection */
    bool has_detection_data;
    penumbra_core_transaction_v1_DetectionDataPlan detection_data;
    /* The memo plan for this transaction. */
    bool has_memo;
    penumbra_core_transaction_v1_MemoPlan memo;
} penumbra_core_transaction_v1_TransactionPlan;

typedef struct _penumbra_core_transaction_v1_MemoPlaintextView {
    bool has_return_address;
    penumbra_core_keys_v1_AddressView return_address;
    pb_callback_t text;
} penumbra_core_transaction_v1_MemoPlaintextView;

typedef struct _penumbra_core_transaction_v1_MemoView_Visible {
    bool has_ciphertext;
    penumbra_core_transaction_v1_MemoCiphertext ciphertext;
    bool has_plaintext;
    penumbra_core_transaction_v1_MemoPlaintextView plaintext;
} penumbra_core_transaction_v1_MemoView_Visible;

typedef struct _penumbra_core_transaction_v1_MemoView_Opaque {
    bool has_ciphertext;
    penumbra_core_transaction_v1_MemoCiphertext ciphertext;
} penumbra_core_transaction_v1_MemoView_Opaque;

typedef struct _penumbra_core_transaction_v1_MemoView {
    pb_size_t which_memo_view;
    union {
        penumbra_core_transaction_v1_MemoView_Visible visible;
        penumbra_core_transaction_v1_MemoView_Opaque opaque;
    } memo_view;
} penumbra_core_transaction_v1_MemoView;

typedef struct _penumbra_core_transaction_v1_TransactionBodyView {
    /* A list views into of actions (state changes) performed by this transaction. */
    pb_callback_t action_views;
    /* Transaction parameters. */
    bool has_transaction_parameters;
    penumbra_core_transaction_v1_TransactionParameters transaction_parameters;
    /* The detection data in this transaction, only populated if
 there are outputs in the actions of this transaction. */
    bool has_detection_data;
    penumbra_core_transaction_v1_DetectionData detection_data;
    /* An optional view of a transaction memo. It will only be populated if there are
 outputs in the actions of this transaction. */
    bool has_memo_view;
    penumbra_core_transaction_v1_MemoView memo_view;
} penumbra_core_transaction_v1_TransactionBodyView;

/* View of a Penumbra transaction. */
typedef struct _penumbra_core_transaction_v1_TransactionView {
    /* View of the transaction body */
    bool has_body_view;
    penumbra_core_transaction_v1_TransactionBodyView body_view;
    /* The binding signature is stored separately from the transaction body that it signs. */
    bool has_binding_sig;
    penumbra_crypto_decaf377_rdsa_v1_BindingSignature binding_sig;
    /* The root of some previous state of the state commitment tree, used as an anchor for all
 ZK state transition proofs. */
    bool has_anchor;
    penumbra_crypto_tct_v1_MerkleRoot anchor;
} penumbra_core_transaction_v1_TransactionView;

#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define penumbra_core_transaction_v1_Transaction_init_default                      \
    {                                                                              \
        false, penumbra_core_transaction_v1_TransactionBody_init_default, false,   \
            penumbra_crypto_decaf377_rdsa_v1_BindingSignature_init_default, false, \
            penumbra_crypto_tct_v1_MerkleRoot_init_default                         \
    }
#define penumbra_core_transaction_v1_TransactionBody_init_default                                      \
    {                                                                                                  \
        {{NULL}, NULL}, false, penumbra_core_transaction_v1_TransactionParameters_init_default, false, \
            penumbra_core_transaction_v1_DetectionData_init_default, false,                            \
            penumbra_core_transaction_v1_MemoCiphertext_init_default                                   \
    }
#define penumbra_core_transaction_v1_TransactionParameters_init_default \
    { 0, {{NULL}, NULL}, false, penumbra_core_component_fee_v1_Fee_init_default }
#define penumbra_core_transaction_v1_TransactionSummary_init_default \
    {                                                                \
        { {NULL}, NULL }                                             \
    }
#define penumbra_core_transaction_v1_TransactionSummary_Effects_init_default \
    { false, penumbra_core_keys_v1_AddressView_init_default, false, penumbra_core_asset_v1_Balance_init_default }
#define penumbra_core_transaction_v1_DetectionData_init_default \
    {                                                           \
        { {NULL}, NULL }                                        \
    }
#define penumbra_core_transaction_v1_Action_init_default                   \
    {                                                                      \
        0, { penumbra_core_component_shielded_pool_v1_Spend_init_default } \
    }
#define penumbra_core_transaction_v1_TransactionPerspective_init_default                                        \
    {                                                                                                           \
        {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, false,                  \
            penumbra_core_txhash_v1_TransactionId_init_default, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, \
            {{NULL}, NULL}, {                                                                                   \
            {NULL}, NULL                                                                                        \
        }                                                                                                       \
    }
#define penumbra_core_transaction_v1_TransactionPerspective_ExtendedMetadataById_init_default \
    { false, penumbra_core_asset_v1_AssetId_init_default, false, google_protobuf_Any_init_default }
#define penumbra_core_transaction_v1_TransactionPerspective_CreationTransactionIdByNullifier_init_default \
    {                                                                                                     \
        false, penumbra_core_component_sct_v1_Nullifier_init_default, false,                              \
            penumbra_core_txhash_v1_TransactionId_init_default                                            \
    }
#define penumbra_core_transaction_v1_TransactionPerspective_NullificationTransactionIdByCommitment_init_default \
    { false, penumbra_crypto_tct_v1_StateCommitment_init_default, false, penumbra_core_txhash_v1_TransactionId_init_default }
#define penumbra_core_transaction_v1_PayloadKeyWithCommitment_init_default \
    { false, penumbra_core_keys_v1_PayloadKey_init_default, false, penumbra_crypto_tct_v1_StateCommitment_init_default }
#define penumbra_core_transaction_v1_NullifierWithNote_init_default          \
    {                                                                        \
        false, penumbra_core_component_sct_v1_Nullifier_init_default, false, \
            penumbra_core_component_shielded_pool_v1_Note_init_default       \
    }
#define penumbra_core_transaction_v1_TransactionView_init_default                    \
    {                                                                                \
        false, penumbra_core_transaction_v1_TransactionBodyView_init_default, false, \
            penumbra_crypto_decaf377_rdsa_v1_BindingSignature_init_default, false,   \
            penumbra_crypto_tct_v1_MerkleRoot_init_default                           \
    }
#define penumbra_core_transaction_v1_TransactionBodyView_init_default                                  \
    {                                                                                                  \
        {{NULL}, NULL}, false, penumbra_core_transaction_v1_TransactionParameters_init_default, false, \
            penumbra_core_transaction_v1_DetectionData_init_default, false,                            \
            penumbra_core_transaction_v1_MemoView_init_default                                         \
    }
#define penumbra_core_transaction_v1_ActionView_init_default                   \
    {                                                                          \
        0, { penumbra_core_component_shielded_pool_v1_SpendView_init_default } \
    }
#define penumbra_core_transaction_v1_AuthorizationData_init_default                              \
    {                                                                                            \
        false, penumbra_core_txhash_v1_EffectHash_init_default, {{NULL}, NULL}, { {NULL}, NULL } \
    }
#define penumbra_core_transaction_v1_WitnessData_init_default                   \
    {                                                                           \
        false, penumbra_crypto_tct_v1_MerkleRoot_init_default, { {NULL}, NULL } \
    }
#define penumbra_core_transaction_v1_TransactionPlan_init_default                                      \
    {                                                                                                  \
        {{NULL}, NULL}, false, penumbra_core_transaction_v1_TransactionParameters_init_default, false, \
            penumbra_core_transaction_v1_DetectionDataPlan_init_default, false,                        \
            penumbra_core_transaction_v1_MemoPlan_init_default                                         \
    }
#define penumbra_core_transaction_v1_DetectionDataPlan_init_default \
    {                                                               \
        { {NULL}, NULL }                                            \
    }
#define penumbra_core_transaction_v1_ActionPlan_init_default                   \
    {                                                                          \
        0, { penumbra_core_component_shielded_pool_v1_SpendPlan_init_default } \
    }
#define penumbra_core_transaction_v1_CluePlan_init_default \
    { false, penumbra_core_keys_v1_Address_init_default, {{NULL}, NULL}, 0 }
#define penumbra_core_transaction_v1_MemoPlan_init_default                               \
    {                                                                                    \
        false, penumbra_core_transaction_v1_MemoPlaintext_init_default, { {NULL}, NULL } \
    }
#define penumbra_core_transaction_v1_MemoCiphertext_init_default \
    {                                                            \
        { {NULL}, NULL }                                         \
    }
#define penumbra_core_transaction_v1_MemoPlaintext_init_default             \
    {                                                                       \
        false, penumbra_core_keys_v1_Address_init_default, { {NULL}, NULL } \
    }
#define penumbra_core_transaction_v1_MemoPlaintextView_init_default             \
    {                                                                           \
        false, penumbra_core_keys_v1_AddressView_init_default, { {NULL}, NULL } \
    }
#define penumbra_core_transaction_v1_MemoView_init_default                \
    {                                                                     \
        0, { penumbra_core_transaction_v1_MemoView_Visible_init_default } \
    }
#define penumbra_core_transaction_v1_MemoView_Visible_init_default              \
    {                                                                           \
        false, penumbra_core_transaction_v1_MemoCiphertext_init_default, false, \
            penumbra_core_transaction_v1_MemoPlaintextView_init_default         \
    }
#define penumbra_core_transaction_v1_MemoView_Opaque_init_default \
    { false, penumbra_core_transaction_v1_MemoCiphertext_init_default }
#define penumbra_core_transaction_v1_Transaction_init_zero                                                                  \
    {                                                                                                                       \
        false, penumbra_core_transaction_v1_TransactionBody_init_zero, false,                                               \
            penumbra_crypto_decaf377_rdsa_v1_BindingSignature_init_zero, false, penumbra_crypto_tct_v1_MerkleRoot_init_zero \
    }
#define penumbra_core_transaction_v1_TransactionBody_init_zero                                      \
    {                                                                                               \
        {{NULL}, NULL}, false, penumbra_core_transaction_v1_TransactionParameters_init_zero, false, \
            penumbra_core_transaction_v1_DetectionData_init_zero, false,                            \
            penumbra_core_transaction_v1_MemoCiphertext_init_zero                                   \
    }
#define penumbra_core_transaction_v1_TransactionParameters_init_zero \
    { 0, {{NULL}, NULL}, false, penumbra_core_component_fee_v1_Fee_init_zero }
#define penumbra_core_transaction_v1_TransactionSummary_init_zero \
    {                                                             \
        { {NULL}, NULL }                                          \
    }
#define penumbra_core_transaction_v1_TransactionSummary_Effects_init_zero \
    { false, penumbra_core_keys_v1_AddressView_init_zero, false, penumbra_core_asset_v1_Balance_init_zero }
#define penumbra_core_transaction_v1_DetectionData_init_zero \
    {                                                        \
        { {NULL}, NULL }                                     \
    }
#define penumbra_core_transaction_v1_Action_init_zero                   \
    {                                                                   \
        0, { penumbra_core_component_shielded_pool_v1_Spend_init_zero } \
    }
#define penumbra_core_transaction_v1_TransactionPerspective_init_zero                                        \
    {                                                                                                        \
        {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, false,               \
            penumbra_core_txhash_v1_TransactionId_init_zero, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, \
            {{NULL}, NULL}, {                                                                                \
            {NULL}, NULL                                                                                     \
        }                                                                                                    \
    }
#define penumbra_core_transaction_v1_TransactionPerspective_ExtendedMetadataById_init_zero \
    { false, penumbra_core_asset_v1_AssetId_init_zero, false, google_protobuf_Any_init_zero }
#define penumbra_core_transaction_v1_TransactionPerspective_CreationTransactionIdByNullifier_init_zero \
    { false, penumbra_core_component_sct_v1_Nullifier_init_zero, false, penumbra_core_txhash_v1_TransactionId_init_zero }
#define penumbra_core_transaction_v1_TransactionPerspective_NullificationTransactionIdByCommitment_init_zero \
    { false, penumbra_crypto_tct_v1_StateCommitment_init_zero, false, penumbra_core_txhash_v1_TransactionId_init_zero }
#define penumbra_core_transaction_v1_PayloadKeyWithCommitment_init_zero \
    { false, penumbra_core_keys_v1_PayloadKey_init_zero, false, penumbra_crypto_tct_v1_StateCommitment_init_zero }
#define penumbra_core_transaction_v1_NullifierWithNote_init_zero          \
    {                                                                     \
        false, penumbra_core_component_sct_v1_Nullifier_init_zero, false, \
            penumbra_core_component_shielded_pool_v1_Note_init_zero       \
    }
#define penumbra_core_transaction_v1_TransactionView_init_zero                                                              \
    {                                                                                                                       \
        false, penumbra_core_transaction_v1_TransactionBodyView_init_zero, false,                                           \
            penumbra_crypto_decaf377_rdsa_v1_BindingSignature_init_zero, false, penumbra_crypto_tct_v1_MerkleRoot_init_zero \
    }
#define penumbra_core_transaction_v1_TransactionBodyView_init_zero                                                       \
    {                                                                                                                    \
        {{NULL}, NULL}, false, penumbra_core_transaction_v1_TransactionParameters_init_zero, false,                      \
            penumbra_core_transaction_v1_DetectionData_init_zero, false, penumbra_core_transaction_v1_MemoView_init_zero \
    }
#define penumbra_core_transaction_v1_ActionView_init_zero                   \
    {                                                                       \
        0, { penumbra_core_component_shielded_pool_v1_SpendView_init_zero } \
    }
#define penumbra_core_transaction_v1_AuthorizationData_init_zero                              \
    {                                                                                         \
        false, penumbra_core_txhash_v1_EffectHash_init_zero, {{NULL}, NULL}, { {NULL}, NULL } \
    }
#define penumbra_core_transaction_v1_WitnessData_init_zero                   \
    {                                                                        \
        false, penumbra_crypto_tct_v1_MerkleRoot_init_zero, { {NULL}, NULL } \
    }
#define penumbra_core_transaction_v1_TransactionPlan_init_zero                                      \
    {                                                                                               \
        {{NULL}, NULL}, false, penumbra_core_transaction_v1_TransactionParameters_init_zero, false, \
            penumbra_core_transaction_v1_DetectionDataPlan_init_zero, false,                        \
            penumbra_core_transaction_v1_MemoPlan_init_zero                                         \
    }
#define penumbra_core_transaction_v1_DetectionDataPlan_init_zero \
    {                                                            \
        { {NULL}, NULL }                                         \
    }
#define penumbra_core_transaction_v1_ActionPlan_init_zero                   \
    {                                                                       \
        0, { penumbra_core_component_shielded_pool_v1_SpendPlan_init_zero } \
    }
#define penumbra_core_transaction_v1_CluePlan_init_zero \
    { false, penumbra_core_keys_v1_Address_init_zero, {{NULL}, NULL}, 0 }
#define penumbra_core_transaction_v1_MemoPlan_init_zero                               \
    {                                                                                 \
        false, penumbra_core_transaction_v1_MemoPlaintext_init_zero, { {NULL}, NULL } \
    }
#define penumbra_core_transaction_v1_MemoCiphertext_init_zero \
    {                                                         \
        { {NULL}, NULL }                                      \
    }
#define penumbra_core_transaction_v1_MemoPlaintext_init_zero             \
    {                                                                    \
        false, penumbra_core_keys_v1_Address_init_zero, { {NULL}, NULL } \
    }
#define penumbra_core_transaction_v1_MemoPlaintextView_init_zero             \
    {                                                                        \
        false, penumbra_core_keys_v1_AddressView_init_zero, { {NULL}, NULL } \
    }
#define penumbra_core_transaction_v1_MemoView_init_zero                \
    {                                                                  \
        0, { penumbra_core_transaction_v1_MemoView_Visible_init_zero } \
    }
#define penumbra_core_transaction_v1_MemoView_Visible_init_zero              \
    {                                                                        \
        false, penumbra_core_transaction_v1_MemoCiphertext_init_zero, false, \
            penumbra_core_transaction_v1_MemoPlaintextView_init_zero         \
    }
#define penumbra_core_transaction_v1_MemoView_Opaque_init_zero \
    { false, penumbra_core_transaction_v1_MemoCiphertext_init_zero }

/* Field tags (for use in manual encoding/decoding) */
#define penumbra_core_transaction_v1_TransactionParameters_expiry_height_tag 1
#define penumbra_core_transaction_v1_TransactionParameters_chain_id_tag 2
#define penumbra_core_transaction_v1_TransactionParameters_fee_tag 3
#define penumbra_core_transaction_v1_TransactionSummary_effects_tag 1
#define penumbra_core_transaction_v1_TransactionSummary_Effects_address_tag 1
#define penumbra_core_transaction_v1_TransactionSummary_Effects_balance_tag 2
#define penumbra_core_transaction_v1_DetectionData_fmd_clues_tag 4
#define penumbra_core_transaction_v1_Action_spend_tag 1
#define penumbra_core_transaction_v1_Action_output_tag 2
#define penumbra_core_transaction_v1_Action_swap_tag 3
#define penumbra_core_transaction_v1_Action_swap_claim_tag 4
#define penumbra_core_transaction_v1_Action_validator_definition_tag 16
#define penumbra_core_transaction_v1_Action_ibc_relay_action_tag 17
#define penumbra_core_transaction_v1_Action_proposal_submit_tag 18
#define penumbra_core_transaction_v1_Action_proposal_withdraw_tag 19
#define penumbra_core_transaction_v1_Action_validator_vote_tag 20
#define penumbra_core_transaction_v1_Action_delegator_vote_tag 21
#define penumbra_core_transaction_v1_Action_proposal_deposit_claim_tag 22
#define penumbra_core_transaction_v1_Action_position_open_tag 30
#define penumbra_core_transaction_v1_Action_position_close_tag 31
#define penumbra_core_transaction_v1_Action_position_withdraw_tag 32
#define penumbra_core_transaction_v1_Action_position_reward_claim_tag 34
#define penumbra_core_transaction_v1_Action_delegate_tag 40
#define penumbra_core_transaction_v1_Action_undelegate_tag 41
#define penumbra_core_transaction_v1_Action_undelegate_claim_tag 42
#define penumbra_core_transaction_v1_Action_community_pool_spend_tag 50
#define penumbra_core_transaction_v1_Action_community_pool_output_tag 51
#define penumbra_core_transaction_v1_Action_community_pool_deposit_tag 52
#define penumbra_core_transaction_v1_Action_action_dutch_auction_schedule_tag 53
#define penumbra_core_transaction_v1_Action_action_dutch_auction_end_tag 54
#define penumbra_core_transaction_v1_Action_action_dutch_auction_withdraw_tag 55
#define penumbra_core_transaction_v1_Action_ics20_withdrawal_tag 200
#define penumbra_core_transaction_v1_TransactionPerspective_payload_keys_tag 1
#define penumbra_core_transaction_v1_TransactionPerspective_spend_nullifiers_tag 2
#define penumbra_core_transaction_v1_TransactionPerspective_advice_notes_tag 3
#define penumbra_core_transaction_v1_TransactionPerspective_address_views_tag 4
#define penumbra_core_transaction_v1_TransactionPerspective_denoms_tag 5
#define penumbra_core_transaction_v1_TransactionPerspective_transaction_id_tag 6
#define penumbra_core_transaction_v1_TransactionPerspective_prices_tag 20
#define penumbra_core_transaction_v1_TransactionPerspective_extended_metadata_tag 30
#define penumbra_core_transaction_v1_TransactionPerspective_creation_transaction_ids_by_nullifier_tag 40
#define penumbra_core_transaction_v1_TransactionPerspective_nullification_transaction_ids_by_commitment_tag 50
#define penumbra_core_transaction_v1_TransactionPerspective_batch_swap_output_data_tag 60
#define penumbra_core_transaction_v1_TransactionPerspective_ExtendedMetadataById_asset_id_tag 1
#define penumbra_core_transaction_v1_TransactionPerspective_ExtendedMetadataById_extended_metadata_tag 2
#define penumbra_core_transaction_v1_TransactionPerspective_CreationTransactionIdByNullifier_nullifier_tag 1
#define penumbra_core_transaction_v1_TransactionPerspective_CreationTransactionIdByNullifier_transaction_id_tag 2
#define penumbra_core_transaction_v1_TransactionPerspective_NullificationTransactionIdByCommitment_commitment_tag 1
#define penumbra_core_transaction_v1_TransactionPerspective_NullificationTransactionIdByCommitment_transaction_id_tag 2
#define penumbra_core_transaction_v1_PayloadKeyWithCommitment_payload_key_tag 1
#define penumbra_core_transaction_v1_PayloadKeyWithCommitment_commitment_tag 2
#define penumbra_core_transaction_v1_NullifierWithNote_nullifier_tag 1
#define penumbra_core_transaction_v1_NullifierWithNote_note_tag 2
#define penumbra_core_transaction_v1_ActionView_spend_tag 1
#define penumbra_core_transaction_v1_ActionView_output_tag 2
#define penumbra_core_transaction_v1_ActionView_swap_tag 3
#define penumbra_core_transaction_v1_ActionView_swap_claim_tag 4
#define penumbra_core_transaction_v1_ActionView_validator_definition_tag 16
#define penumbra_core_transaction_v1_ActionView_ibc_relay_action_tag 17
#define penumbra_core_transaction_v1_ActionView_proposal_submit_tag 18
#define penumbra_core_transaction_v1_ActionView_proposal_withdraw_tag 19
#define penumbra_core_transaction_v1_ActionView_validator_vote_tag 20
#define penumbra_core_transaction_v1_ActionView_delegator_vote_tag 21
#define penumbra_core_transaction_v1_ActionView_proposal_deposit_claim_tag 22
#define penumbra_core_transaction_v1_ActionView_position_open_tag 30
#define penumbra_core_transaction_v1_ActionView_position_close_tag 31
#define penumbra_core_transaction_v1_ActionView_position_withdraw_tag 32
#define penumbra_core_transaction_v1_ActionView_position_reward_claim_tag 34
#define penumbra_core_transaction_v1_ActionView_delegate_tag 41
#define penumbra_core_transaction_v1_ActionView_undelegate_tag 42
#define penumbra_core_transaction_v1_ActionView_undelegate_claim_tag 43
#define penumbra_core_transaction_v1_ActionView_community_pool_spend_tag 50
#define penumbra_core_transaction_v1_ActionView_community_pool_output_tag 51
#define penumbra_core_transaction_v1_ActionView_community_pool_deposit_tag 52
#define penumbra_core_transaction_v1_ActionView_action_dutch_auction_schedule_tag 53
#define penumbra_core_transaction_v1_ActionView_action_dutch_auction_end_tag 54
#define penumbra_core_transaction_v1_ActionView_action_dutch_auction_withdraw_tag 55
#define penumbra_core_transaction_v1_ActionView_ics20_withdrawal_tag 200
#define penumbra_core_transaction_v1_AuthorizationData_effect_hash_tag 1
#define penumbra_core_transaction_v1_AuthorizationData_spend_auths_tag 2
#define penumbra_core_transaction_v1_AuthorizationData_delegator_vote_auths_tag 3
#define penumbra_core_transaction_v1_WitnessData_anchor_tag 1
#define penumbra_core_transaction_v1_WitnessData_state_commitment_proofs_tag 2
#define penumbra_core_transaction_v1_DetectionDataPlan_clue_plans_tag 5
#define penumbra_core_transaction_v1_ActionPlan_spend_tag 1
#define penumbra_core_transaction_v1_ActionPlan_output_tag 2
#define penumbra_core_transaction_v1_ActionPlan_swap_tag 3
#define penumbra_core_transaction_v1_ActionPlan_swap_claim_tag 4
#define penumbra_core_transaction_v1_ActionPlan_validator_definition_tag 16
#define penumbra_core_transaction_v1_ActionPlan_ibc_relay_action_tag 17
#define penumbra_core_transaction_v1_ActionPlan_proposal_submit_tag 18
#define penumbra_core_transaction_v1_ActionPlan_proposal_withdraw_tag 19
#define penumbra_core_transaction_v1_ActionPlan_validator_vote_tag 20
#define penumbra_core_transaction_v1_ActionPlan_delegator_vote_tag 21
#define penumbra_core_transaction_v1_ActionPlan_proposal_deposit_claim_tag 22
#define penumbra_core_transaction_v1_ActionPlan_position_open_tag 30
#define penumbra_core_transaction_v1_ActionPlan_position_close_tag 31
#define penumbra_core_transaction_v1_ActionPlan_position_withdraw_tag 32
#define penumbra_core_transaction_v1_ActionPlan_position_reward_claim_tag 34
#define penumbra_core_transaction_v1_ActionPlan_delegate_tag 40
#define penumbra_core_transaction_v1_ActionPlan_undelegate_tag 41
#define penumbra_core_transaction_v1_ActionPlan_undelegate_claim_tag 42
#define penumbra_core_transaction_v1_ActionPlan_community_pool_spend_tag 50
#define penumbra_core_transaction_v1_ActionPlan_community_pool_output_tag 51
#define penumbra_core_transaction_v1_ActionPlan_community_pool_deposit_tag 52
#define penumbra_core_transaction_v1_ActionPlan_action_dutch_auction_schedule_tag 53
#define penumbra_core_transaction_v1_ActionPlan_action_dutch_auction_end_tag 54
#define penumbra_core_transaction_v1_ActionPlan_action_dutch_auction_withdraw_tag 55
#define penumbra_core_transaction_v1_ActionPlan_ics20_withdrawal_tag 200
#define penumbra_core_transaction_v1_CluePlan_address_tag 1
#define penumbra_core_transaction_v1_CluePlan_rseed_tag 2
#define penumbra_core_transaction_v1_CluePlan_precision_bits_tag 3
#define penumbra_core_transaction_v1_MemoCiphertext_inner_tag 1
#define penumbra_core_transaction_v1_TransactionBody_actions_tag 1
#define penumbra_core_transaction_v1_TransactionBody_transaction_parameters_tag 2
#define penumbra_core_transaction_v1_TransactionBody_detection_data_tag 4
#define penumbra_core_transaction_v1_TransactionBody_memo_tag 5
#define penumbra_core_transaction_v1_Transaction_body_tag 1
#define penumbra_core_transaction_v1_Transaction_binding_sig_tag 2
#define penumbra_core_transaction_v1_Transaction_anchor_tag 3
#define penumbra_core_transaction_v1_MemoPlaintext_return_address_tag 1
#define penumbra_core_transaction_v1_MemoPlaintext_text_tag 2
#define penumbra_core_transaction_v1_MemoPlan_plaintext_tag 1
#define penumbra_core_transaction_v1_MemoPlan_key_tag 2
#define penumbra_core_transaction_v1_TransactionPlan_actions_tag 1
#define penumbra_core_transaction_v1_TransactionPlan_transaction_parameters_tag 2
#define penumbra_core_transaction_v1_TransactionPlan_detection_data_tag 4
#define penumbra_core_transaction_v1_TransactionPlan_memo_tag 5
#define penumbra_core_transaction_v1_MemoPlaintextView_return_address_tag 1
#define penumbra_core_transaction_v1_MemoPlaintextView_text_tag 2
#define penumbra_core_transaction_v1_MemoView_Visible_ciphertext_tag 1
#define penumbra_core_transaction_v1_MemoView_Visible_plaintext_tag 2
#define penumbra_core_transaction_v1_MemoView_Opaque_ciphertext_tag 1
#define penumbra_core_transaction_v1_MemoView_visible_tag 1
#define penumbra_core_transaction_v1_MemoView_opaque_tag 2
#define penumbra_core_transaction_v1_TransactionBodyView_action_views_tag 1
#define penumbra_core_transaction_v1_TransactionBodyView_transaction_parameters_tag 2
#define penumbra_core_transaction_v1_TransactionBodyView_detection_data_tag 4
#define penumbra_core_transaction_v1_TransactionBodyView_memo_view_tag 5
#define penumbra_core_transaction_v1_TransactionView_body_view_tag 1
#define penumbra_core_transaction_v1_TransactionView_binding_sig_tag 2
#define penumbra_core_transaction_v1_TransactionView_anchor_tag 3

/* Struct field encoding specification for nanopb */
#define penumbra_core_transaction_v1_Transaction_FIELDLIST(X, a) \
    X(a, STATIC, OPTIONAL, MESSAGE, body, 1)                     \
    X(a, STATIC, OPTIONAL, MESSAGE, binding_sig, 2)              \
    X(a, STATIC, OPTIONAL, MESSAGE, anchor, 3)
#define penumbra_core_transaction_v1_Transaction_CALLBACK NULL
#define penumbra_core_transaction_v1_Transaction_DEFAULT NULL
#define penumbra_core_transaction_v1_Transaction_body_MSGTYPE penumbra_core_transaction_v1_TransactionBody
#define penumbra_core_transaction_v1_Transaction_binding_sig_MSGTYPE penumbra_crypto_decaf377_rdsa_v1_BindingSignature
#define penumbra_core_transaction_v1_Transaction_anchor_MSGTYPE penumbra_crypto_tct_v1_MerkleRoot

#define penumbra_core_transaction_v1_TransactionBody_FIELDLIST(X, a) \
    X(a, CALLBACK, REPEATED, MESSAGE, actions, 1)                    \
    X(a, STATIC, OPTIONAL, MESSAGE, transaction_parameters, 2)       \
    X(a, STATIC, OPTIONAL, MESSAGE, detection_data, 4)               \
    X(a, STATIC, OPTIONAL, MESSAGE, memo, 5)
#define penumbra_core_transaction_v1_TransactionBody_CALLBACK pb_default_field_callback
#define penumbra_core_transaction_v1_TransactionBody_DEFAULT NULL
#define penumbra_core_transaction_v1_TransactionBody_actions_MSGTYPE penumbra_core_transaction_v1_Action
#define penumbra_core_transaction_v1_TransactionBody_transaction_parameters_MSGTYPE \
    penumbra_core_transaction_v1_TransactionParameters
#define penumbra_core_transaction_v1_TransactionBody_detection_data_MSGTYPE penumbra_core_transaction_v1_DetectionData
#define penumbra_core_transaction_v1_TransactionBody_memo_MSGTYPE penumbra_core_transaction_v1_MemoCiphertext

#define penumbra_core_transaction_v1_TransactionParameters_FIELDLIST(X, a) \
    X(a, STATIC, SINGULAR, UINT64, expiry_height, 1)                       \
    X(a, CALLBACK, SINGULAR, STRING, chain_id, 2)                          \
    X(a, STATIC, OPTIONAL, MESSAGE, fee, 3)
#define penumbra_core_transaction_v1_TransactionParameters_CALLBACK pb_default_field_callback
#define penumbra_core_transaction_v1_TransactionParameters_DEFAULT NULL
#define penumbra_core_transaction_v1_TransactionParameters_fee_MSGTYPE penumbra_core_component_fee_v1_Fee

#define penumbra_core_transaction_v1_TransactionSummary_FIELDLIST(X, a) X(a, CALLBACK, REPEATED, MESSAGE, effects, 1)
#define penumbra_core_transaction_v1_TransactionSummary_CALLBACK pb_default_field_callback
#define penumbra_core_transaction_v1_TransactionSummary_DEFAULT NULL
#define penumbra_core_transaction_v1_TransactionSummary_effects_MSGTYPE \
    penumbra_core_transaction_v1_TransactionSummary_Effects

#define penumbra_core_transaction_v1_TransactionSummary_Effects_FIELDLIST(X, a) \
    X(a, STATIC, OPTIONAL, MESSAGE, address, 1)                                 \
    X(a, STATIC, OPTIONAL, MESSAGE, balance, 2)
#define penumbra_core_transaction_v1_TransactionSummary_Effects_CALLBACK NULL
#define penumbra_core_transaction_v1_TransactionSummary_Effects_DEFAULT NULL
#define penumbra_core_transaction_v1_TransactionSummary_Effects_address_MSGTYPE penumbra_core_keys_v1_AddressView
#define penumbra_core_transaction_v1_TransactionSummary_Effects_balance_MSGTYPE penumbra_core_asset_v1_Balance

#define penumbra_core_transaction_v1_DetectionData_FIELDLIST(X, a) X(a, CALLBACK, REPEATED, MESSAGE, fmd_clues, 4)
#define penumbra_core_transaction_v1_DetectionData_CALLBACK pb_default_field_callback
#define penumbra_core_transaction_v1_DetectionData_DEFAULT NULL
#define penumbra_core_transaction_v1_DetectionData_fmd_clues_MSGTYPE penumbra_crypto_decaf377_fmd_v1_Clue

#define penumbra_core_transaction_v1_Action_FIELDLIST(X, a)                                                         \
    X(a, STATIC, ONEOF, MESSAGE, (action, spend, action.spend), 1)                                                  \
    X(a, STATIC, ONEOF, MESSAGE, (action, output, action.output), 2)                                                \
    X(a, STATIC, ONEOF, MESSAGE, (action, swap, action.swap), 3)                                                    \
    X(a, STATIC, ONEOF, MESSAGE, (action, swap_claim, action.swap_claim), 4)                                        \
    X(a, STATIC, ONEOF, MESSAGE, (action, validator_definition, action.validator_definition), 16)                   \
    X(a, STATIC, ONEOF, MESSAGE, (action, ibc_relay_action, action.ibc_relay_action), 17)                           \
    X(a, STATIC, ONEOF, MESSAGE, (action, proposal_submit, action.proposal_submit), 18)                             \
    X(a, STATIC, ONEOF, MESSAGE, (action, proposal_withdraw, action.proposal_withdraw), 19)                         \
    X(a, STATIC, ONEOF, MESSAGE, (action, validator_vote, action.validator_vote), 20)                               \
    X(a, STATIC, ONEOF, MESSAGE, (action, delegator_vote, action.delegator_vote), 21)                               \
    X(a, STATIC, ONEOF, MESSAGE, (action, proposal_deposit_claim, action.proposal_deposit_claim), 22)               \
    X(a, STATIC, ONEOF, MESSAGE, (action, position_open, action.position_open), 30)                                 \
    X(a, STATIC, ONEOF, MESSAGE, (action, position_close, action.position_close), 31)                               \
    X(a, STATIC, ONEOF, MESSAGE, (action, position_withdraw, action.position_withdraw), 32)                         \
    X(a, STATIC, ONEOF, MESSAGE, (action, position_reward_claim, action.position_reward_claim), 34)                 \
    X(a, STATIC, ONEOF, MESSAGE, (action, delegate, action.delegate), 40)                                           \
    X(a, STATIC, ONEOF, MESSAGE, (action, undelegate, action.undelegate), 41)                                       \
    X(a, STATIC, ONEOF, MESSAGE, (action, undelegate_claim, action.undelegate_claim), 42)                           \
    X(a, STATIC, ONEOF, MESSAGE, (action, community_pool_spend, action.community_pool_spend), 50)                   \
    X(a, STATIC, ONEOF, MESSAGE, (action, community_pool_output, action.community_pool_output), 51)                 \
    X(a, STATIC, ONEOF, MESSAGE, (action, community_pool_deposit, action.community_pool_deposit), 52)               \
    X(a, STATIC, ONEOF, MESSAGE, (action, action_dutch_auction_schedule, action.action_dutch_auction_schedule), 53) \
    X(a, STATIC, ONEOF, MESSAGE, (action, action_dutch_auction_end, action.action_dutch_auction_end), 54)           \
    X(a, STATIC, ONEOF, MESSAGE, (action, action_dutch_auction_withdraw, action.action_dutch_auction_withdraw), 55) \
    X(a, STATIC, ONEOF, MESSAGE, (action, ics20_withdrawal, action.ics20_withdrawal), 200)
#define penumbra_core_transaction_v1_Action_CALLBACK NULL
#define penumbra_core_transaction_v1_Action_DEFAULT NULL
#define penumbra_core_transaction_v1_Action_action_spend_MSGTYPE penumbra_core_component_shielded_pool_v1_Spend
#define penumbra_core_transaction_v1_Action_action_output_MSGTYPE penumbra_core_component_shielded_pool_v1_Output
#define penumbra_core_transaction_v1_Action_action_swap_MSGTYPE penumbra_core_component_dex_v1_Swap
#define penumbra_core_transaction_v1_Action_action_swap_claim_MSGTYPE penumbra_core_component_dex_v1_SwapClaim
#define penumbra_core_transaction_v1_Action_action_validator_definition_MSGTYPE \
    penumbra_core_component_stake_v1_ValidatorDefinition
#define penumbra_core_transaction_v1_Action_action_ibc_relay_action_MSGTYPE penumbra_core_component_ibc_v1_IbcRelay
#define penumbra_core_transaction_v1_Action_action_proposal_submit_MSGTYPE \
    penumbra_core_component_governance_v1_ProposalSubmit
#define penumbra_core_transaction_v1_Action_action_proposal_withdraw_MSGTYPE \
    penumbra_core_component_governance_v1_ProposalWithdraw
#define penumbra_core_transaction_v1_Action_action_validator_vote_MSGTYPE penumbra_core_component_governance_v1_ValidatorVote
#define penumbra_core_transaction_v1_Action_action_delegator_vote_MSGTYPE penumbra_core_component_governance_v1_DelegatorVote
#define penumbra_core_transaction_v1_Action_action_proposal_deposit_claim_MSGTYPE \
    penumbra_core_component_governance_v1_ProposalDepositClaim
#define penumbra_core_transaction_v1_Action_action_position_open_MSGTYPE penumbra_core_component_dex_v1_PositionOpen
#define penumbra_core_transaction_v1_Action_action_position_close_MSGTYPE penumbra_core_component_dex_v1_PositionClose
#define penumbra_core_transaction_v1_Action_action_position_withdraw_MSGTYPE penumbra_core_component_dex_v1_PositionWithdraw
#define penumbra_core_transaction_v1_Action_action_position_reward_claim_MSGTYPE \
    penumbra_core_component_dex_v1_PositionRewardClaim
#define penumbra_core_transaction_v1_Action_action_delegate_MSGTYPE penumbra_core_component_stake_v1_Delegate
#define penumbra_core_transaction_v1_Action_action_undelegate_MSGTYPE penumbra_core_component_stake_v1_Undelegate
#define penumbra_core_transaction_v1_Action_action_undelegate_claim_MSGTYPE penumbra_core_component_stake_v1_UndelegateClaim
#define penumbra_core_transaction_v1_Action_action_community_pool_spend_MSGTYPE \
    penumbra_core_component_governance_v1_CommunityPoolSpend
#define penumbra_core_transaction_v1_Action_action_community_pool_output_MSGTYPE \
    penumbra_core_component_governance_v1_CommunityPoolOutput
#define penumbra_core_transaction_v1_Action_action_community_pool_deposit_MSGTYPE \
    penumbra_core_component_governance_v1_CommunityPoolDeposit
#define penumbra_core_transaction_v1_Action_action_action_dutch_auction_schedule_MSGTYPE \
    penumbra_core_component_auction_v1_ActionDutchAuctionSchedule
#define penumbra_core_transaction_v1_Action_action_action_dutch_auction_end_MSGTYPE \
    penumbra_core_component_auction_v1_ActionDutchAuctionEnd
#define penumbra_core_transaction_v1_Action_action_action_dutch_auction_withdraw_MSGTYPE \
    penumbra_core_component_auction_v1_ActionDutchAuctionWithdraw
#define penumbra_core_transaction_v1_Action_action_ics20_withdrawal_MSGTYPE penumbra_core_component_ibc_v1_Ics20Withdrawal

#define penumbra_core_transaction_v1_TransactionPerspective_FIELDLIST(X, a)            \
    X(a, CALLBACK, REPEATED, MESSAGE, payload_keys, 1)                                 \
    X(a, CALLBACK, REPEATED, MESSAGE, spend_nullifiers, 2)                             \
    X(a, CALLBACK, REPEATED, MESSAGE, advice_notes, 3)                                 \
    X(a, CALLBACK, REPEATED, MESSAGE, address_views, 4)                                \
    X(a, CALLBACK, REPEATED, MESSAGE, denoms, 5)                                       \
    X(a, STATIC, OPTIONAL, MESSAGE, transaction_id, 6)                                 \
    X(a, CALLBACK, REPEATED, MESSAGE, prices, 20)                                      \
    X(a, CALLBACK, REPEATED, MESSAGE, extended_metadata, 30)                           \
    X(a, CALLBACK, REPEATED, MESSAGE, creation_transaction_ids_by_nullifier, 40)       \
    X(a, CALLBACK, REPEATED, MESSAGE, nullification_transaction_ids_by_commitment, 50) \
    X(a, CALLBACK, REPEATED, MESSAGE, batch_swap_output_data, 60)
#define penumbra_core_transaction_v1_TransactionPerspective_CALLBACK pb_default_field_callback
#define penumbra_core_transaction_v1_TransactionPerspective_DEFAULT NULL
#define penumbra_core_transaction_v1_TransactionPerspective_payload_keys_MSGTYPE \
    penumbra_core_transaction_v1_PayloadKeyWithCommitment
#define penumbra_core_transaction_v1_TransactionPerspective_spend_nullifiers_MSGTYPE \
    penumbra_core_transaction_v1_NullifierWithNote
#define penumbra_core_transaction_v1_TransactionPerspective_advice_notes_MSGTYPE \
    penumbra_core_component_shielded_pool_v1_Note
#define penumbra_core_transaction_v1_TransactionPerspective_address_views_MSGTYPE penumbra_core_keys_v1_AddressView
#define penumbra_core_transaction_v1_TransactionPerspective_denoms_MSGTYPE penumbra_core_asset_v1_Metadata
#define penumbra_core_transaction_v1_TransactionPerspective_transaction_id_MSGTYPE penumbra_core_txhash_v1_TransactionId
#define penumbra_core_transaction_v1_TransactionPerspective_prices_MSGTYPE penumbra_core_asset_v1_EstimatedPrice
#define penumbra_core_transaction_v1_TransactionPerspective_extended_metadata_MSGTYPE \
    penumbra_core_transaction_v1_TransactionPerspective_ExtendedMetadataById
#define penumbra_core_transaction_v1_TransactionPerspective_creation_transaction_ids_by_nullifier_MSGTYPE \
    penumbra_core_transaction_v1_TransactionPerspective_CreationTransactionIdByNullifier
#define penumbra_core_transaction_v1_TransactionPerspective_nullification_transaction_ids_by_commitment_MSGTYPE \
    penumbra_core_transaction_v1_TransactionPerspective_NullificationTransactionIdByCommitment
#define penumbra_core_transaction_v1_TransactionPerspective_batch_swap_output_data_MSGTYPE \
    penumbra_core_component_dex_v1_BatchSwapOutputData

#define penumbra_core_transaction_v1_TransactionPerspective_ExtendedMetadataById_FIELDLIST(X, a) \
    X(a, STATIC, OPTIONAL, MESSAGE, asset_id, 1)                                                 \
    X(a, STATIC, OPTIONAL, MESSAGE, extended_metadata, 2)
#define penumbra_core_transaction_v1_TransactionPerspective_ExtendedMetadataById_CALLBACK NULL
#define penumbra_core_transaction_v1_TransactionPerspective_ExtendedMetadataById_DEFAULT NULL
#define penumbra_core_transaction_v1_TransactionPerspective_ExtendedMetadataById_asset_id_MSGTYPE \
    penumbra_core_asset_v1_AssetId
#define penumbra_core_transaction_v1_TransactionPerspective_ExtendedMetadataById_extended_metadata_MSGTYPE \
    google_protobuf_Any

#define penumbra_core_transaction_v1_TransactionPerspective_CreationTransactionIdByNullifier_FIELDLIST(X, a) \
    X(a, STATIC, OPTIONAL, MESSAGE, nullifier, 1)                                                            \
    X(a, STATIC, OPTIONAL, MESSAGE, transaction_id, 2)
#define penumbra_core_transaction_v1_TransactionPerspective_CreationTransactionIdByNullifier_CALLBACK NULL
#define penumbra_core_transaction_v1_TransactionPerspective_CreationTransactionIdByNullifier_DEFAULT NULL
#define penumbra_core_transaction_v1_TransactionPerspective_CreationTransactionIdByNullifier_nullifier_MSGTYPE \
    penumbra_core_component_sct_v1_Nullifier
#define penumbra_core_transaction_v1_TransactionPerspective_CreationTransactionIdByNullifier_transaction_id_MSGTYPE \
    penumbra_core_txhash_v1_TransactionId

#define penumbra_core_transaction_v1_TransactionPerspective_NullificationTransactionIdByCommitment_FIELDLIST(X, a) \
    X(a, STATIC, OPTIONAL, MESSAGE, commitment, 1)                                                                 \
    X(a, STATIC, OPTIONAL, MESSAGE, transaction_id, 2)
#define penumbra_core_transaction_v1_TransactionPerspective_NullificationTransactionIdByCommitment_CALLBACK NULL
#define penumbra_core_transaction_v1_TransactionPerspective_NullificationTransactionIdByCommitment_DEFAULT NULL
#define penumbra_core_transaction_v1_TransactionPerspective_NullificationTransactionIdByCommitment_commitment_MSGTYPE \
    penumbra_crypto_tct_v1_StateCommitment
#define penumbra_core_transaction_v1_TransactionPerspective_NullificationTransactionIdByCommitment_transaction_id_MSGTYPE \
    penumbra_core_txhash_v1_TransactionId

#define penumbra_core_transaction_v1_PayloadKeyWithCommitment_FIELDLIST(X, a) \
    X(a, STATIC, OPTIONAL, MESSAGE, payload_key, 1)                           \
    X(a, STATIC, OPTIONAL, MESSAGE, commitment, 2)
#define penumbra_core_transaction_v1_PayloadKeyWithCommitment_CALLBACK NULL
#define penumbra_core_transaction_v1_PayloadKeyWithCommitment_DEFAULT NULL
#define penumbra_core_transaction_v1_PayloadKeyWithCommitment_payload_key_MSGTYPE penumbra_core_keys_v1_PayloadKey
#define penumbra_core_transaction_v1_PayloadKeyWithCommitment_commitment_MSGTYPE penumbra_crypto_tct_v1_StateCommitment

#define penumbra_core_transaction_v1_NullifierWithNote_FIELDLIST(X, a) \
    X(a, STATIC, OPTIONAL, MESSAGE, nullifier, 1)                      \
    X(a, STATIC, OPTIONAL, MESSAGE, note, 2)
#define penumbra_core_transaction_v1_NullifierWithNote_CALLBACK NULL
#define penumbra_core_transaction_v1_NullifierWithNote_DEFAULT NULL
#define penumbra_core_transaction_v1_NullifierWithNote_nullifier_MSGTYPE penumbra_core_component_sct_v1_Nullifier
#define penumbra_core_transaction_v1_NullifierWithNote_note_MSGTYPE penumbra_core_component_shielded_pool_v1_Note

#define penumbra_core_transaction_v1_TransactionView_FIELDLIST(X, a) \
    X(a, STATIC, OPTIONAL, MESSAGE, body_view, 1)                    \
    X(a, STATIC, OPTIONAL, MESSAGE, binding_sig, 2)                  \
    X(a, STATIC, OPTIONAL, MESSAGE, anchor, 3)
#define penumbra_core_transaction_v1_TransactionView_CALLBACK NULL
#define penumbra_core_transaction_v1_TransactionView_DEFAULT NULL
#define penumbra_core_transaction_v1_TransactionView_body_view_MSGTYPE penumbra_core_transaction_v1_TransactionBodyView
#define penumbra_core_transaction_v1_TransactionView_binding_sig_MSGTYPE penumbra_crypto_decaf377_rdsa_v1_BindingSignature
#define penumbra_core_transaction_v1_TransactionView_anchor_MSGTYPE penumbra_crypto_tct_v1_MerkleRoot

#define penumbra_core_transaction_v1_TransactionBodyView_FIELDLIST(X, a) \
    X(a, CALLBACK, REPEATED, MESSAGE, action_views, 1)                   \
    X(a, STATIC, OPTIONAL, MESSAGE, transaction_parameters, 2)           \
    X(a, STATIC, OPTIONAL, MESSAGE, detection_data, 4)                   \
    X(a, STATIC, OPTIONAL, MESSAGE, memo_view, 5)
#define penumbra_core_transaction_v1_TransactionBodyView_CALLBACK pb_default_field_callback
#define penumbra_core_transaction_v1_TransactionBodyView_DEFAULT NULL
#define penumbra_core_transaction_v1_TransactionBodyView_action_views_MSGTYPE penumbra_core_transaction_v1_ActionView
#define penumbra_core_transaction_v1_TransactionBodyView_transaction_parameters_MSGTYPE \
    penumbra_core_transaction_v1_TransactionParameters
#define penumbra_core_transaction_v1_TransactionBodyView_detection_data_MSGTYPE penumbra_core_transaction_v1_DetectionData
#define penumbra_core_transaction_v1_TransactionBodyView_memo_view_MSGTYPE penumbra_core_transaction_v1_MemoView

#define penumbra_core_transaction_v1_ActionView_FIELDLIST(X, a)                                                           \
    X(a, STATIC, ONEOF, MESSAGE, (action_view, spend, action_view.spend), 1)                                              \
    X(a, STATIC, ONEOF, MESSAGE, (action_view, output, action_view.output), 2)                                            \
    X(a, STATIC, ONEOF, MESSAGE, (action_view, swap, action_view.swap), 3)                                                \
    X(a, STATIC, ONEOF, MESSAGE, (action_view, swap_claim, action_view.swap_claim), 4)                                    \
    X(a, STATIC, ONEOF, MESSAGE, (action_view, validator_definition, action_view.validator_definition), 16)               \
    X(a, STATIC, ONEOF, MESSAGE, (action_view, ibc_relay_action, action_view.ibc_relay_action), 17)                       \
    X(a, STATIC, ONEOF, MESSAGE, (action_view, proposal_submit, action_view.proposal_submit), 18)                         \
    X(a, STATIC, ONEOF, MESSAGE, (action_view, proposal_withdraw, action_view.proposal_withdraw), 19)                     \
    X(a, STATIC, ONEOF, MESSAGE, (action_view, validator_vote, action_view.validator_vote), 20)                           \
    X(a, STATIC, ONEOF, MESSAGE, (action_view, delegator_vote, action_view.delegator_vote), 21)                           \
    X(a, STATIC, ONEOF, MESSAGE, (action_view, proposal_deposit_claim, action_view.proposal_deposit_claim), 22)           \
    X(a, STATIC, ONEOF, MESSAGE, (action_view, position_open, action_view.position_open), 30)                             \
    X(a, STATIC, ONEOF, MESSAGE, (action_view, position_close, action_view.position_close), 31)                           \
    X(a, STATIC, ONEOF, MESSAGE, (action_view, position_withdraw, action_view.position_withdraw), 32)                     \
    X(a, STATIC, ONEOF, MESSAGE, (action_view, position_reward_claim, action_view.position_reward_claim), 34)             \
    X(a, STATIC, ONEOF, MESSAGE, (action_view, delegate, action_view.delegate), 41)                                       \
    X(a, STATIC, ONEOF, MESSAGE, (action_view, undelegate, action_view.undelegate), 42)                                   \
    X(a, STATIC, ONEOF, MESSAGE, (action_view, undelegate_claim, action_view.undelegate_claim), 43)                       \
    X(a, STATIC, ONEOF, MESSAGE, (action_view, community_pool_spend, action_view.community_pool_spend), 50)               \
    X(a, STATIC, ONEOF, MESSAGE, (action_view, community_pool_output, action_view.community_pool_output), 51)             \
    X(a, STATIC, ONEOF, MESSAGE, (action_view, community_pool_deposit, action_view.community_pool_deposit), 52)           \
    X(a, STATIC, ONEOF, MESSAGE, (action_view, action_dutch_auction_schedule, action_view.action_dutch_auction_schedule), \
      53)                                                                                                                 \
    X(a, STATIC, ONEOF, MESSAGE, (action_view, action_dutch_auction_end, action_view.action_dutch_auction_end), 54)       \
    X(a, STATIC, ONEOF, MESSAGE, (action_view, action_dutch_auction_withdraw, action_view.action_dutch_auction_withdraw), \
      55)                                                                                                                 \
    X(a, STATIC, ONEOF, MESSAGE, (action_view, ics20_withdrawal, action_view.ics20_withdrawal), 200)
#define penumbra_core_transaction_v1_ActionView_CALLBACK NULL
#define penumbra_core_transaction_v1_ActionView_DEFAULT NULL
#define penumbra_core_transaction_v1_ActionView_action_view_spend_MSGTYPE penumbra_core_component_shielded_pool_v1_SpendView
#define penumbra_core_transaction_v1_ActionView_action_view_output_MSGTYPE \
    penumbra_core_component_shielded_pool_v1_OutputView
#define penumbra_core_transaction_v1_ActionView_action_view_swap_MSGTYPE penumbra_core_component_dex_v1_SwapView
#define penumbra_core_transaction_v1_ActionView_action_view_swap_claim_MSGTYPE penumbra_core_component_dex_v1_SwapClaimView
#define penumbra_core_transaction_v1_ActionView_action_view_validator_definition_MSGTYPE \
    penumbra_core_component_stake_v1_ValidatorDefinition
#define penumbra_core_transaction_v1_ActionView_action_view_ibc_relay_action_MSGTYPE penumbra_core_component_ibc_v1_IbcRelay
#define penumbra_core_transaction_v1_ActionView_action_view_proposal_submit_MSGTYPE \
    penumbra_core_component_governance_v1_ProposalSubmit
#define penumbra_core_transaction_v1_ActionView_action_view_proposal_withdraw_MSGTYPE \
    penumbra_core_component_governance_v1_ProposalWithdraw
#define penumbra_core_transaction_v1_ActionView_action_view_validator_vote_MSGTYPE \
    penumbra_core_component_governance_v1_ValidatorVote
#define penumbra_core_transaction_v1_ActionView_action_view_delegator_vote_MSGTYPE \
    penumbra_core_component_governance_v1_DelegatorVoteView
#define penumbra_core_transaction_v1_ActionView_action_view_proposal_deposit_claim_MSGTYPE \
    penumbra_core_component_governance_v1_ProposalDepositClaim
#define penumbra_core_transaction_v1_ActionView_action_view_position_open_MSGTYPE penumbra_core_component_dex_v1_PositionOpen
#define penumbra_core_transaction_v1_ActionView_action_view_position_close_MSGTYPE \
    penumbra_core_component_dex_v1_PositionClose
#define penumbra_core_transaction_v1_ActionView_action_view_position_withdraw_MSGTYPE \
    penumbra_core_component_dex_v1_PositionWithdraw
#define penumbra_core_transaction_v1_ActionView_action_view_position_reward_claim_MSGTYPE \
    penumbra_core_component_dex_v1_PositionRewardClaim
#define penumbra_core_transaction_v1_ActionView_action_view_delegate_MSGTYPE penumbra_core_component_stake_v1_Delegate
#define penumbra_core_transaction_v1_ActionView_action_view_undelegate_MSGTYPE penumbra_core_component_stake_v1_Undelegate
#define penumbra_core_transaction_v1_ActionView_action_view_undelegate_claim_MSGTYPE \
    penumbra_core_component_stake_v1_UndelegateClaim
#define penumbra_core_transaction_v1_ActionView_action_view_community_pool_spend_MSGTYPE \
    penumbra_core_component_governance_v1_CommunityPoolSpend
#define penumbra_core_transaction_v1_ActionView_action_view_community_pool_output_MSGTYPE \
    penumbra_core_component_governance_v1_CommunityPoolOutput
#define penumbra_core_transaction_v1_ActionView_action_view_community_pool_deposit_MSGTYPE \
    penumbra_core_component_governance_v1_CommunityPoolDeposit
#define penumbra_core_transaction_v1_ActionView_action_view_action_dutch_auction_schedule_MSGTYPE \
    penumbra_core_component_auction_v1_ActionDutchAuctionScheduleView
#define penumbra_core_transaction_v1_ActionView_action_view_action_dutch_auction_end_MSGTYPE \
    penumbra_core_component_auction_v1_ActionDutchAuctionEnd
#define penumbra_core_transaction_v1_ActionView_action_view_action_dutch_auction_withdraw_MSGTYPE \
    penumbra_core_component_auction_v1_ActionDutchAuctionWithdrawView
#define penumbra_core_transaction_v1_ActionView_action_view_ics20_withdrawal_MSGTYPE \
    penumbra_core_component_ibc_v1_Ics20Withdrawal

#define penumbra_core_transaction_v1_AuthorizationData_FIELDLIST(X, a) \
    X(a, STATIC, OPTIONAL, MESSAGE, effect_hash, 1)                    \
    X(a, CALLBACK, REPEATED, MESSAGE, spend_auths, 2)                  \
    X(a, CALLBACK, REPEATED, MESSAGE, delegator_vote_auths, 3)
#define penumbra_core_transaction_v1_AuthorizationData_CALLBACK pb_default_field_callback
#define penumbra_core_transaction_v1_AuthorizationData_DEFAULT NULL
#define penumbra_core_transaction_v1_AuthorizationData_effect_hash_MSGTYPE penumbra_core_txhash_v1_EffectHash
#define penumbra_core_transaction_v1_AuthorizationData_spend_auths_MSGTYPE \
    penumbra_crypto_decaf377_rdsa_v1_SpendAuthSignature
#define penumbra_core_transaction_v1_AuthorizationData_delegator_vote_auths_MSGTYPE \
    penumbra_crypto_decaf377_rdsa_v1_SpendAuthSignature

#define penumbra_core_transaction_v1_WitnessData_FIELDLIST(X, a) \
    X(a, STATIC, OPTIONAL, MESSAGE, anchor, 1)                   \
    X(a, CALLBACK, REPEATED, MESSAGE, state_commitment_proofs, 2)
#define penumbra_core_transaction_v1_WitnessData_CALLBACK pb_default_field_callback
#define penumbra_core_transaction_v1_WitnessData_DEFAULT NULL
#define penumbra_core_transaction_v1_WitnessData_anchor_MSGTYPE penumbra_crypto_tct_v1_MerkleRoot
#define penumbra_core_transaction_v1_WitnessData_state_commitment_proofs_MSGTYPE penumbra_crypto_tct_v1_StateCommitmentProof

#define penumbra_core_transaction_v1_TransactionPlan_FIELDLIST(X, a) \
    X(a, CALLBACK, REPEATED, MESSAGE, actions, 1)                    \
    X(a, STATIC, OPTIONAL, MESSAGE, transaction_parameters, 2)       \
    X(a, STATIC, OPTIONAL, MESSAGE, detection_data, 4)               \
    X(a, STATIC, OPTIONAL, MESSAGE, memo, 5)
#define penumbra_core_transaction_v1_TransactionPlan_CALLBACK pb_default_field_callback
#define penumbra_core_transaction_v1_TransactionPlan_DEFAULT NULL
#define penumbra_core_transaction_v1_TransactionPlan_actions_MSGTYPE penumbra_core_transaction_v1_ActionPlan
#define penumbra_core_transaction_v1_TransactionPlan_transaction_parameters_MSGTYPE \
    penumbra_core_transaction_v1_TransactionParameters
#define penumbra_core_transaction_v1_TransactionPlan_detection_data_MSGTYPE penumbra_core_transaction_v1_DetectionDataPlan
#define penumbra_core_transaction_v1_TransactionPlan_memo_MSGTYPE penumbra_core_transaction_v1_MemoPlan

#define penumbra_core_transaction_v1_DetectionDataPlan_FIELDLIST(X, a) X(a, CALLBACK, REPEATED, MESSAGE, clue_plans, 5)
#define penumbra_core_transaction_v1_DetectionDataPlan_CALLBACK pb_default_field_callback
#define penumbra_core_transaction_v1_DetectionDataPlan_DEFAULT NULL
#define penumbra_core_transaction_v1_DetectionDataPlan_clue_plans_MSGTYPE penumbra_core_transaction_v1_CluePlan

#define penumbra_core_transaction_v1_ActionPlan_FIELDLIST(X, a)                                                     \
    X(a, STATIC, ONEOF, MESSAGE, (action, spend, action.spend), 1)                                                  \
    X(a, STATIC, ONEOF, MESSAGE, (action, output, action.output), 2)                                                \
    X(a, STATIC, ONEOF, MESSAGE, (action, swap, action.swap), 3)                                                    \
    X(a, STATIC, ONEOF, MESSAGE, (action, swap_claim, action.swap_claim), 4)                                        \
    X(a, STATIC, ONEOF, MESSAGE, (action, validator_definition, action.validator_definition), 16)                   \
    X(a, STATIC, ONEOF, MESSAGE, (action, ibc_relay_action, action.ibc_relay_action), 17)                           \
    X(a, STATIC, ONEOF, MESSAGE, (action, proposal_submit, action.proposal_submit), 18)                             \
    X(a, STATIC, ONEOF, MESSAGE, (action, proposal_withdraw, action.proposal_withdraw), 19)                         \
    X(a, STATIC, ONEOF, MESSAGE, (action, validator_vote, action.validator_vote), 20)                               \
    X(a, STATIC, ONEOF, MESSAGE, (action, delegator_vote, action.delegator_vote), 21)                               \
    X(a, STATIC, ONEOF, MESSAGE, (action, proposal_deposit_claim, action.proposal_deposit_claim), 22)               \
    X(a, STATIC, ONEOF, MESSAGE, (action, position_open, action.position_open), 30)                                 \
    X(a, STATIC, ONEOF, MESSAGE, (action, position_close, action.position_close), 31)                               \
    X(a, STATIC, ONEOF, MESSAGE, (action, position_withdraw, action.position_withdraw), 32)                         \
    X(a, STATIC, ONEOF, MESSAGE, (action, position_reward_claim, action.position_reward_claim), 34)                 \
    X(a, STATIC, ONEOF, MESSAGE, (action, delegate, action.delegate), 40)                                           \
    X(a, STATIC, ONEOF, MESSAGE, (action, undelegate, action.undelegate), 41)                                       \
    X(a, STATIC, ONEOF, MESSAGE, (action, undelegate_claim, action.undelegate_claim), 42)                           \
    X(a, STATIC, ONEOF, MESSAGE, (action, community_pool_spend, action.community_pool_spend), 50)                   \
    X(a, STATIC, ONEOF, MESSAGE, (action, community_pool_output, action.community_pool_output), 51)                 \
    X(a, STATIC, ONEOF, MESSAGE, (action, community_pool_deposit, action.community_pool_deposit), 52)               \
    X(a, STATIC, ONEOF, MESSAGE, (action, action_dutch_auction_schedule, action.action_dutch_auction_schedule), 53) \
    X(a, STATIC, ONEOF, MESSAGE, (action, action_dutch_auction_end, action.action_dutch_auction_end), 54)           \
    X(a, STATIC, ONEOF, MESSAGE, (action, action_dutch_auction_withdraw, action.action_dutch_auction_withdraw), 55) \
    X(a, STATIC, ONEOF, MESSAGE, (action, ics20_withdrawal, action.ics20_withdrawal), 200)
#define penumbra_core_transaction_v1_ActionPlan_CALLBACK NULL
#define penumbra_core_transaction_v1_ActionPlan_DEFAULT NULL
#define penumbra_core_transaction_v1_ActionPlan_action_spend_MSGTYPE penumbra_core_component_shielded_pool_v1_SpendPlan
#define penumbra_core_transaction_v1_ActionPlan_action_output_MSGTYPE penumbra_core_component_shielded_pool_v1_OutputPlan
#define penumbra_core_transaction_v1_ActionPlan_action_swap_MSGTYPE penumbra_core_component_dex_v1_SwapPlan
#define penumbra_core_transaction_v1_ActionPlan_action_swap_claim_MSGTYPE penumbra_core_component_dex_v1_SwapClaimPlan
#define penumbra_core_transaction_v1_ActionPlan_action_validator_definition_MSGTYPE \
    penumbra_core_component_stake_v1_ValidatorDefinition
#define penumbra_core_transaction_v1_ActionPlan_action_ibc_relay_action_MSGTYPE penumbra_core_component_ibc_v1_IbcRelay
#define penumbra_core_transaction_v1_ActionPlan_action_proposal_submit_MSGTYPE \
    penumbra_core_component_governance_v1_ProposalSubmit
#define penumbra_core_transaction_v1_ActionPlan_action_proposal_withdraw_MSGTYPE \
    penumbra_core_component_governance_v1_ProposalWithdraw
#define penumbra_core_transaction_v1_ActionPlan_action_validator_vote_MSGTYPE \
    penumbra_core_component_governance_v1_ValidatorVote
#define penumbra_core_transaction_v1_ActionPlan_action_delegator_vote_MSGTYPE \
    penumbra_core_component_governance_v1_DelegatorVotePlan
#define penumbra_core_transaction_v1_ActionPlan_action_proposal_deposit_claim_MSGTYPE \
    penumbra_core_component_governance_v1_ProposalDepositClaim
#define penumbra_core_transaction_v1_ActionPlan_action_position_open_MSGTYPE penumbra_core_component_dex_v1_PositionOpen
#define penumbra_core_transaction_v1_ActionPlan_action_position_close_MSGTYPE penumbra_core_component_dex_v1_PositionClose
#define penumbra_core_transaction_v1_ActionPlan_action_position_withdraw_MSGTYPE \
    penumbra_core_component_dex_v1_PositionWithdrawPlan
#define penumbra_core_transaction_v1_ActionPlan_action_position_reward_claim_MSGTYPE \
    penumbra_core_component_dex_v1_PositionRewardClaimPlan
#define penumbra_core_transaction_v1_ActionPlan_action_delegate_MSGTYPE penumbra_core_component_stake_v1_Delegate
#define penumbra_core_transaction_v1_ActionPlan_action_undelegate_MSGTYPE penumbra_core_component_stake_v1_Undelegate
#define penumbra_core_transaction_v1_ActionPlan_action_undelegate_claim_MSGTYPE \
    penumbra_core_component_stake_v1_UndelegateClaimPlan
#define penumbra_core_transaction_v1_ActionPlan_action_community_pool_spend_MSGTYPE \
    penumbra_core_component_governance_v1_CommunityPoolSpend
#define penumbra_core_transaction_v1_ActionPlan_action_community_pool_output_MSGTYPE \
    penumbra_core_component_governance_v1_CommunityPoolOutput
#define penumbra_core_transaction_v1_ActionPlan_action_community_pool_deposit_MSGTYPE \
    penumbra_core_component_governance_v1_CommunityPoolDeposit
#define penumbra_core_transaction_v1_ActionPlan_action_action_dutch_auction_schedule_MSGTYPE \
    penumbra_core_component_auction_v1_ActionDutchAuctionSchedule
#define penumbra_core_transaction_v1_ActionPlan_action_action_dutch_auction_end_MSGTYPE \
    penumbra_core_component_auction_v1_ActionDutchAuctionEnd
#define penumbra_core_transaction_v1_ActionPlan_action_action_dutch_auction_withdraw_MSGTYPE \
    penumbra_core_component_auction_v1_ActionDutchAuctionWithdrawPlan
#define penumbra_core_transaction_v1_ActionPlan_action_ics20_withdrawal_MSGTYPE \
    penumbra_core_component_ibc_v1_Ics20Withdrawal

#define penumbra_core_transaction_v1_CluePlan_FIELDLIST(X, a) \
    X(a, STATIC, OPTIONAL, MESSAGE, address, 1)               \
    X(a, CALLBACK, SINGULAR, BYTES, rseed, 2)                 \
    X(a, STATIC, SINGULAR, UINT64, precision_bits, 3)
#define penumbra_core_transaction_v1_CluePlan_CALLBACK pb_default_field_callback
#define penumbra_core_transaction_v1_CluePlan_DEFAULT NULL
#define penumbra_core_transaction_v1_CluePlan_address_MSGTYPE penumbra_core_keys_v1_Address

#define penumbra_core_transaction_v1_MemoPlan_FIELDLIST(X, a) \
    X(a, STATIC, OPTIONAL, MESSAGE, plaintext, 1)             \
    X(a, CALLBACK, SINGULAR, BYTES, key, 2)
#define penumbra_core_transaction_v1_MemoPlan_CALLBACK pb_default_field_callback
#define penumbra_core_transaction_v1_MemoPlan_DEFAULT NULL
#define penumbra_core_transaction_v1_MemoPlan_plaintext_MSGTYPE penumbra_core_transaction_v1_MemoPlaintext

#define penumbra_core_transaction_v1_MemoCiphertext_FIELDLIST(X, a) X(a, CALLBACK, SINGULAR, BYTES, inner, 1)
#define penumbra_core_transaction_v1_MemoCiphertext_CALLBACK pb_default_field_callback
#define penumbra_core_transaction_v1_MemoCiphertext_DEFAULT NULL

#define penumbra_core_transaction_v1_MemoPlaintext_FIELDLIST(X, a) \
    X(a, STATIC, OPTIONAL, MESSAGE, return_address, 1)             \
    X(a, CALLBACK, SINGULAR, STRING, text, 2)
#define penumbra_core_transaction_v1_MemoPlaintext_CALLBACK pb_default_field_callback
#define penumbra_core_transaction_v1_MemoPlaintext_DEFAULT NULL
#define penumbra_core_transaction_v1_MemoPlaintext_return_address_MSGTYPE penumbra_core_keys_v1_Address

#define penumbra_core_transaction_v1_MemoPlaintextView_FIELDLIST(X, a) \
    X(a, STATIC, OPTIONAL, MESSAGE, return_address, 1)                 \
    X(a, CALLBACK, SINGULAR, STRING, text, 2)
#define penumbra_core_transaction_v1_MemoPlaintextView_CALLBACK pb_default_field_callback
#define penumbra_core_transaction_v1_MemoPlaintextView_DEFAULT NULL
#define penumbra_core_transaction_v1_MemoPlaintextView_return_address_MSGTYPE penumbra_core_keys_v1_AddressView

#define penumbra_core_transaction_v1_MemoView_FIELDLIST(X, a)                \
    X(a, STATIC, ONEOF, MESSAGE, (memo_view, visible, memo_view.visible), 1) \
    X(a, STATIC, ONEOF, MESSAGE, (memo_view, opaque, memo_view.opaque), 2)
#define penumbra_core_transaction_v1_MemoView_CALLBACK NULL
#define penumbra_core_transaction_v1_MemoView_DEFAULT NULL
#define penumbra_core_transaction_v1_MemoView_memo_view_visible_MSGTYPE penumbra_core_transaction_v1_MemoView_Visible
#define penumbra_core_transaction_v1_MemoView_memo_view_opaque_MSGTYPE penumbra_core_transaction_v1_MemoView_Opaque

#define penumbra_core_transaction_v1_MemoView_Visible_FIELDLIST(X, a) \
    X(a, STATIC, OPTIONAL, MESSAGE, ciphertext, 1)                    \
    X(a, STATIC, OPTIONAL, MESSAGE, plaintext, 2)
#define penumbra_core_transaction_v1_MemoView_Visible_CALLBACK NULL
#define penumbra_core_transaction_v1_MemoView_Visible_DEFAULT NULL
#define penumbra_core_transaction_v1_MemoView_Visible_ciphertext_MSGTYPE penumbra_core_transaction_v1_MemoCiphertext
#define penumbra_core_transaction_v1_MemoView_Visible_plaintext_MSGTYPE penumbra_core_transaction_v1_MemoPlaintextView

#define penumbra_core_transaction_v1_MemoView_Opaque_FIELDLIST(X, a) X(a, STATIC, OPTIONAL, MESSAGE, ciphertext, 1)
#define penumbra_core_transaction_v1_MemoView_Opaque_CALLBACK NULL
#define penumbra_core_transaction_v1_MemoView_Opaque_DEFAULT NULL
#define penumbra_core_transaction_v1_MemoView_Opaque_ciphertext_MSGTYPE penumbra_core_transaction_v1_MemoCiphertext

extern const pb_msgdesc_t penumbra_core_transaction_v1_Transaction_msg;
extern const pb_msgdesc_t penumbra_core_transaction_v1_TransactionBody_msg;
extern const pb_msgdesc_t penumbra_core_transaction_v1_TransactionParameters_msg;
extern const pb_msgdesc_t penumbra_core_transaction_v1_TransactionSummary_msg;
extern const pb_msgdesc_t penumbra_core_transaction_v1_TransactionSummary_Effects_msg;
extern const pb_msgdesc_t penumbra_core_transaction_v1_DetectionData_msg;
extern const pb_msgdesc_t penumbra_core_transaction_v1_Action_msg;
extern const pb_msgdesc_t penumbra_core_transaction_v1_TransactionPerspective_msg;
extern const pb_msgdesc_t penumbra_core_transaction_v1_TransactionPerspective_ExtendedMetadataById_msg;
extern const pb_msgdesc_t penumbra_core_transaction_v1_TransactionPerspective_CreationTransactionIdByNullifier_msg;
extern const pb_msgdesc_t penumbra_core_transaction_v1_TransactionPerspective_NullificationTransactionIdByCommitment_msg;
extern const pb_msgdesc_t penumbra_core_transaction_v1_PayloadKeyWithCommitment_msg;
extern const pb_msgdesc_t penumbra_core_transaction_v1_NullifierWithNote_msg;
extern const pb_msgdesc_t penumbra_core_transaction_v1_TransactionView_msg;
extern const pb_msgdesc_t penumbra_core_transaction_v1_TransactionBodyView_msg;
extern const pb_msgdesc_t penumbra_core_transaction_v1_ActionView_msg;
extern const pb_msgdesc_t penumbra_core_transaction_v1_AuthorizationData_msg;
extern const pb_msgdesc_t penumbra_core_transaction_v1_WitnessData_msg;
extern const pb_msgdesc_t penumbra_core_transaction_v1_TransactionPlan_msg;
extern const pb_msgdesc_t penumbra_core_transaction_v1_DetectionDataPlan_msg;
extern const pb_msgdesc_t penumbra_core_transaction_v1_ActionPlan_msg;
extern const pb_msgdesc_t penumbra_core_transaction_v1_CluePlan_msg;
extern const pb_msgdesc_t penumbra_core_transaction_v1_MemoPlan_msg;
extern const pb_msgdesc_t penumbra_core_transaction_v1_MemoCiphertext_msg;
extern const pb_msgdesc_t penumbra_core_transaction_v1_MemoPlaintext_msg;
extern const pb_msgdesc_t penumbra_core_transaction_v1_MemoPlaintextView_msg;
extern const pb_msgdesc_t penumbra_core_transaction_v1_MemoView_msg;
extern const pb_msgdesc_t penumbra_core_transaction_v1_MemoView_Visible_msg;
extern const pb_msgdesc_t penumbra_core_transaction_v1_MemoView_Opaque_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define penumbra_core_transaction_v1_Transaction_fields &penumbra_core_transaction_v1_Transaction_msg
#define penumbra_core_transaction_v1_TransactionBody_fields &penumbra_core_transaction_v1_TransactionBody_msg
#define penumbra_core_transaction_v1_TransactionParameters_fields &penumbra_core_transaction_v1_TransactionParameters_msg
#define penumbra_core_transaction_v1_TransactionSummary_fields &penumbra_core_transaction_v1_TransactionSummary_msg
#define penumbra_core_transaction_v1_TransactionSummary_Effects_fields \
    &penumbra_core_transaction_v1_TransactionSummary_Effects_msg
#define penumbra_core_transaction_v1_DetectionData_fields &penumbra_core_transaction_v1_DetectionData_msg
#define penumbra_core_transaction_v1_Action_fields &penumbra_core_transaction_v1_Action_msg
#define penumbra_core_transaction_v1_TransactionPerspective_fields &penumbra_core_transaction_v1_TransactionPerspective_msg
#define penumbra_core_transaction_v1_TransactionPerspective_ExtendedMetadataById_fields \
    &penumbra_core_transaction_v1_TransactionPerspective_ExtendedMetadataById_msg
#define penumbra_core_transaction_v1_TransactionPerspective_CreationTransactionIdByNullifier_fields \
    &penumbra_core_transaction_v1_TransactionPerspective_CreationTransactionIdByNullifier_msg
#define penumbra_core_transaction_v1_TransactionPerspective_NullificationTransactionIdByCommitment_fields \
    &penumbra_core_transaction_v1_TransactionPerspective_NullificationTransactionIdByCommitment_msg
#define penumbra_core_transaction_v1_PayloadKeyWithCommitment_fields \
    &penumbra_core_transaction_v1_PayloadKeyWithCommitment_msg
#define penumbra_core_transaction_v1_NullifierWithNote_fields &penumbra_core_transaction_v1_NullifierWithNote_msg
#define penumbra_core_transaction_v1_TransactionView_fields &penumbra_core_transaction_v1_TransactionView_msg
#define penumbra_core_transaction_v1_TransactionBodyView_fields &penumbra_core_transaction_v1_TransactionBodyView_msg
#define penumbra_core_transaction_v1_ActionView_fields &penumbra_core_transaction_v1_ActionView_msg
#define penumbra_core_transaction_v1_AuthorizationData_fields &penumbra_core_transaction_v1_AuthorizationData_msg
#define penumbra_core_transaction_v1_WitnessData_fields &penumbra_core_transaction_v1_WitnessData_msg
#define penumbra_core_transaction_v1_TransactionPlan_fields &penumbra_core_transaction_v1_TransactionPlan_msg
#define penumbra_core_transaction_v1_DetectionDataPlan_fields &penumbra_core_transaction_v1_DetectionDataPlan_msg
#define penumbra_core_transaction_v1_ActionPlan_fields &penumbra_core_transaction_v1_ActionPlan_msg
#define penumbra_core_transaction_v1_CluePlan_fields &penumbra_core_transaction_v1_CluePlan_msg
#define penumbra_core_transaction_v1_MemoPlan_fields &penumbra_core_transaction_v1_MemoPlan_msg
#define penumbra_core_transaction_v1_MemoCiphertext_fields &penumbra_core_transaction_v1_MemoCiphertext_msg
#define penumbra_core_transaction_v1_MemoPlaintext_fields &penumbra_core_transaction_v1_MemoPlaintext_msg
#define penumbra_core_transaction_v1_MemoPlaintextView_fields &penumbra_core_transaction_v1_MemoPlaintextView_msg
#define penumbra_core_transaction_v1_MemoView_fields &penumbra_core_transaction_v1_MemoView_msg
#define penumbra_core_transaction_v1_MemoView_Visible_fields &penumbra_core_transaction_v1_MemoView_Visible_msg
#define penumbra_core_transaction_v1_MemoView_Opaque_fields &penumbra_core_transaction_v1_MemoView_Opaque_msg

/* Maximum encoded size of messages (where known) */
#if defined(penumbra_core_component_shielded_pool_v1_Spend_size) &&                                                         \
    defined(penumbra_core_component_shielded_pool_v1_Output_size) && defined(penumbra_core_component_dex_v1_Swap_size) &&   \
    defined(penumbra_core_component_dex_v1_SwapClaim_size) &&                                                               \
    defined(penumbra_core_component_stake_v1_ValidatorDefinition_size) &&                                                   \
    defined(penumbra_core_component_ibc_v1_IbcRelay_size) &&                                                                \
    defined(penumbra_core_component_governance_v1_ProposalSubmit_size) &&                                                   \
    defined(penumbra_core_component_governance_v1_ProposalWithdraw_size) &&                                                 \
    defined(penumbra_core_component_governance_v1_ValidatorVote_size) &&                                                    \
    defined(penumbra_core_component_governance_v1_DelegatorVote_size) &&                                                    \
    defined(penumbra_core_component_governance_v1_ProposalDepositClaim_size) &&                                             \
    defined(penumbra_core_component_dex_v1_PositionOpen_size) &&                                                            \
    defined(penumbra_core_component_dex_v1_PositionClose_size) &&                                                           \
    defined(penumbra_core_component_dex_v1_PositionWithdraw_size) &&                                                        \
    defined(penumbra_core_component_dex_v1_PositionRewardClaim_size) &&                                                     \
    defined(penumbra_core_component_stake_v1_Delegate_size) && defined(penumbra_core_component_stake_v1_Undelegate_size) && \
    defined(penumbra_core_component_stake_v1_UndelegateClaim_size) &&                                                       \
    defined(penumbra_core_component_governance_v1_CommunityPoolSpend_size) &&                                               \
    defined(penumbra_core_component_governance_v1_CommunityPoolOutput_size) &&                                              \
    defined(penumbra_core_component_governance_v1_CommunityPoolDeposit_size) &&                                             \
    defined(penumbra_core_component_auction_v1_ActionDutchAuctionSchedule_size) &&                                          \
    defined(penumbra_core_component_auction_v1_ActionDutchAuctionEnd_size) &&                                               \
    defined(penumbra_core_component_auction_v1_ActionDutchAuctionWithdraw_size) &&                                          \
    defined(penumbra_core_component_ibc_v1_Ics20Withdrawal_size)
union penumbra_core_transaction_v1_Action_action_size_union {
    char f1[(6 + penumbra_core_component_shielded_pool_v1_Spend_size)];
    char f2[(6 + penumbra_core_component_shielded_pool_v1_Output_size)];
    char f3[(6 + penumbra_core_component_dex_v1_Swap_size)];
    char f4[(6 + penumbra_core_component_dex_v1_SwapClaim_size)];
    char f16[(7 + penumbra_core_component_stake_v1_ValidatorDefinition_size)];
    char f17[(7 + penumbra_core_component_ibc_v1_IbcRelay_size)];
    char f18[(7 + penumbra_core_component_governance_v1_ProposalSubmit_size)];
    char f19[(7 + penumbra_core_component_governance_v1_ProposalWithdraw_size)];
    char f20[(7 + penumbra_core_component_governance_v1_ValidatorVote_size)];
    char f21[(7 + penumbra_core_component_governance_v1_DelegatorVote_size)];
    char f22[(7 + penumbra_core_component_governance_v1_ProposalDepositClaim_size)];
    char f30[(7 + penumbra_core_component_dex_v1_PositionOpen_size)];
    char f31[(7 + penumbra_core_component_dex_v1_PositionClose_size)];
    char f32[(7 + penumbra_core_component_dex_v1_PositionWithdraw_size)];
    char f34[(7 + penumbra_core_component_dex_v1_PositionRewardClaim_size)];
    char f40[(7 + penumbra_core_component_stake_v1_Delegate_size)];
    char f41[(7 + penumbra_core_component_stake_v1_Undelegate_size)];
    char f42[(7 + penumbra_core_component_stake_v1_UndelegateClaim_size)];
    char f50[(7 + penumbra_core_component_governance_v1_CommunityPoolSpend_size)];
    char f51[(7 + penumbra_core_component_governance_v1_CommunityPoolOutput_size)];
    char f52[(7 + penumbra_core_component_governance_v1_CommunityPoolDeposit_size)];
    char f53[(7 + penumbra_core_component_auction_v1_ActionDutchAuctionSchedule_size)];
    char f54[(7 + penumbra_core_component_auction_v1_ActionDutchAuctionEnd_size)];
    char f55[(7 + penumbra_core_component_auction_v1_ActionDutchAuctionWithdraw_size)];
    char f200[(7 + penumbra_core_component_ibc_v1_Ics20Withdrawal_size)];
};
#endif
#if defined(penumbra_core_component_shielded_pool_v1_SpendView_size) &&                                                     \
    defined(penumbra_core_component_shielded_pool_v1_OutputView_size) &&                                                    \
    defined(penumbra_core_component_dex_v1_SwapView_size) && defined(penumbra_core_component_dex_v1_SwapClaimView_size) &&  \
    defined(penumbra_core_component_stake_v1_ValidatorDefinition_size) &&                                                   \
    defined(penumbra_core_component_ibc_v1_IbcRelay_size) &&                                                                \
    defined(penumbra_core_component_governance_v1_ProposalSubmit_size) &&                                                   \
    defined(penumbra_core_component_governance_v1_ProposalWithdraw_size) &&                                                 \
    defined(penumbra_core_component_governance_v1_ValidatorVote_size) &&                                                    \
    defined(penumbra_core_component_governance_v1_DelegatorVoteView_size) &&                                                \
    defined(penumbra_core_component_governance_v1_ProposalDepositClaim_size) &&                                             \
    defined(penumbra_core_component_dex_v1_PositionOpen_size) &&                                                            \
    defined(penumbra_core_component_dex_v1_PositionClose_size) &&                                                           \
    defined(penumbra_core_component_dex_v1_PositionWithdraw_size) &&                                                        \
    defined(penumbra_core_component_dex_v1_PositionRewardClaim_size) &&                                                     \
    defined(penumbra_core_component_stake_v1_Delegate_size) && defined(penumbra_core_component_stake_v1_Undelegate_size) && \
    defined(penumbra_core_component_stake_v1_UndelegateClaim_size) &&                                                       \
    defined(penumbra_core_component_governance_v1_CommunityPoolSpend_size) &&                                               \
    defined(penumbra_core_component_governance_v1_CommunityPoolOutput_size) &&                                              \
    defined(penumbra_core_component_governance_v1_CommunityPoolDeposit_size) &&                                             \
    defined(penumbra_core_component_auction_v1_ActionDutchAuctionScheduleView_size) &&                                      \
    defined(penumbra_core_component_auction_v1_ActionDutchAuctionEnd_size) &&                                               \
    defined(penumbra_core_component_auction_v1_ActionDutchAuctionWithdrawView_size) &&                                      \
    defined(penumbra_core_component_ibc_v1_Ics20Withdrawal_size)
union penumbra_core_transaction_v1_ActionView_action_view_size_union {
    char f1[(6 + penumbra_core_component_shielded_pool_v1_SpendView_size)];
    char f2[(6 + penumbra_core_component_shielded_pool_v1_OutputView_size)];
    char f3[(6 + penumbra_core_component_dex_v1_SwapView_size)];
    char f4[(6 + penumbra_core_component_dex_v1_SwapClaimView_size)];
    char f16[(7 + penumbra_core_component_stake_v1_ValidatorDefinition_size)];
    char f17[(7 + penumbra_core_component_ibc_v1_IbcRelay_size)];
    char f18[(7 + penumbra_core_component_governance_v1_ProposalSubmit_size)];
    char f19[(7 + penumbra_core_component_governance_v1_ProposalWithdraw_size)];
    char f20[(7 + penumbra_core_component_governance_v1_ValidatorVote_size)];
    char f21[(7 + penumbra_core_component_governance_v1_DelegatorVoteView_size)];
    char f22[(7 + penumbra_core_component_governance_v1_ProposalDepositClaim_size)];
    char f30[(7 + penumbra_core_component_dex_v1_PositionOpen_size)];
    char f31[(7 + penumbra_core_component_dex_v1_PositionClose_size)];
    char f32[(7 + penumbra_core_component_dex_v1_PositionWithdraw_size)];
    char f34[(7 + penumbra_core_component_dex_v1_PositionRewardClaim_size)];
    char f41[(7 + penumbra_core_component_stake_v1_Delegate_size)];
    char f42[(7 + penumbra_core_component_stake_v1_Undelegate_size)];
    char f43[(7 + penumbra_core_component_stake_v1_UndelegateClaim_size)];
    char f50[(7 + penumbra_core_component_governance_v1_CommunityPoolSpend_size)];
    char f51[(7 + penumbra_core_component_governance_v1_CommunityPoolOutput_size)];
    char f52[(7 + penumbra_core_component_governance_v1_CommunityPoolDeposit_size)];
    char f53[(7 + penumbra_core_component_auction_v1_ActionDutchAuctionScheduleView_size)];
    char f54[(7 + penumbra_core_component_auction_v1_ActionDutchAuctionEnd_size)];
    char f55[(7 + penumbra_core_component_auction_v1_ActionDutchAuctionWithdrawView_size)];
    char f200[(7 + penumbra_core_component_ibc_v1_Ics20Withdrawal_size)];
};
#endif
#if defined(penumbra_core_component_shielded_pool_v1_SpendPlan_size) &&                                                     \
    defined(penumbra_core_component_shielded_pool_v1_OutputPlan_size) &&                                                    \
    defined(penumbra_core_component_dex_v1_SwapPlan_size) && defined(penumbra_core_component_dex_v1_SwapClaimPlan_size) &&  \
    defined(penumbra_core_component_stake_v1_ValidatorDefinition_size) &&                                                   \
    defined(penumbra_core_component_ibc_v1_IbcRelay_size) &&                                                                \
    defined(penumbra_core_component_governance_v1_ProposalSubmit_size) &&                                                   \
    defined(penumbra_core_component_governance_v1_ProposalWithdraw_size) &&                                                 \
    defined(penumbra_core_component_governance_v1_ValidatorVote_size) &&                                                    \
    defined(penumbra_core_component_governance_v1_DelegatorVotePlan_size) &&                                                \
    defined(penumbra_core_component_governance_v1_ProposalDepositClaim_size) &&                                             \
    defined(penumbra_core_component_dex_v1_PositionOpen_size) &&                                                            \
    defined(penumbra_core_component_dex_v1_PositionClose_size) &&                                                           \
    defined(penumbra_core_component_dex_v1_PositionWithdrawPlan_size) &&                                                    \
    defined(penumbra_core_component_stake_v1_Delegate_size) && defined(penumbra_core_component_stake_v1_Undelegate_size) && \
    defined(penumbra_core_component_stake_v1_UndelegateClaimPlan_size) &&                                                   \
    defined(penumbra_core_component_governance_v1_CommunityPoolSpend_size) &&                                               \
    defined(penumbra_core_component_governance_v1_CommunityPoolOutput_size) &&                                              \
    defined(penumbra_core_component_governance_v1_CommunityPoolDeposit_size) &&                                             \
    defined(penumbra_core_component_auction_v1_ActionDutchAuctionSchedule_size) &&                                          \
    defined(penumbra_core_component_auction_v1_ActionDutchAuctionEnd_size) &&                                               \
    defined(penumbra_core_component_auction_v1_ActionDutchAuctionWithdrawPlan_size) &&                                      \
    defined(penumbra_core_component_ibc_v1_Ics20Withdrawal_size)
union penumbra_core_transaction_v1_ActionPlan_action_size_union {
    char f1[(6 + penumbra_core_component_shielded_pool_v1_SpendPlan_size)];
    char f2[(6 + penumbra_core_component_shielded_pool_v1_OutputPlan_size)];
    char f3[(6 + penumbra_core_component_dex_v1_SwapPlan_size)];
    char f4[(6 + penumbra_core_component_dex_v1_SwapClaimPlan_size)];
    char f16[(7 + penumbra_core_component_stake_v1_ValidatorDefinition_size)];
    char f17[(7 + penumbra_core_component_ibc_v1_IbcRelay_size)];
    char f18[(7 + penumbra_core_component_governance_v1_ProposalSubmit_size)];
    char f19[(7 + penumbra_core_component_governance_v1_ProposalWithdraw_size)];
    char f20[(7 + penumbra_core_component_governance_v1_ValidatorVote_size)];
    char f21[(7 + penumbra_core_component_governance_v1_DelegatorVotePlan_size)];
    char f22[(7 + penumbra_core_component_governance_v1_ProposalDepositClaim_size)];
    char f30[(7 + penumbra_core_component_dex_v1_PositionOpen_size)];
    char f31[(7 + penumbra_core_component_dex_v1_PositionClose_size)];
    char f32[(7 + penumbra_core_component_dex_v1_PositionWithdrawPlan_size)];
    char f40[(7 + penumbra_core_component_stake_v1_Delegate_size)];
    char f41[(7 + penumbra_core_component_stake_v1_Undelegate_size)];
    char f42[(7 + penumbra_core_component_stake_v1_UndelegateClaimPlan_size)];
    char f50[(7 + penumbra_core_component_governance_v1_CommunityPoolSpend_size)];
    char f51[(7 + penumbra_core_component_governance_v1_CommunityPoolOutput_size)];
    char f52[(7 + penumbra_core_component_governance_v1_CommunityPoolDeposit_size)];
    char f53[(7 + penumbra_core_component_auction_v1_ActionDutchAuctionSchedule_size)];
    char f54[(7 + penumbra_core_component_auction_v1_ActionDutchAuctionEnd_size)];
    char f55[(7 + penumbra_core_component_auction_v1_ActionDutchAuctionWithdrawPlan_size)];
    char f200[(7 + penumbra_core_component_ibc_v1_Ics20Withdrawal_size)];
    char f0[53];
};
#endif
/* penumbra_core_transaction_v1_Transaction_size depends on runtime parameters */
/* penumbra_core_transaction_v1_TransactionBody_size depends on runtime parameters */
/* penumbra_core_transaction_v1_TransactionParameters_size depends on runtime parameters */
/* penumbra_core_transaction_v1_TransactionSummary_size depends on runtime parameters */
/* penumbra_core_transaction_v1_DetectionData_size depends on runtime parameters */
/* penumbra_core_transaction_v1_TransactionPerspective_size depends on runtime parameters */
/* penumbra_core_transaction_v1_TransactionView_size depends on runtime parameters */
/* penumbra_core_transaction_v1_TransactionBodyView_size depends on runtime parameters */
/* penumbra_core_transaction_v1_AuthorizationData_size depends on runtime parameters */
/* penumbra_core_transaction_v1_WitnessData_size depends on runtime parameters */
/* penumbra_core_transaction_v1_TransactionPlan_size depends on runtime parameters */
/* penumbra_core_transaction_v1_DetectionDataPlan_size depends on runtime parameters */
/* penumbra_core_transaction_v1_CluePlan_size depends on runtime parameters */
/* penumbra_core_transaction_v1_MemoPlan_size depends on runtime parameters */
/* penumbra_core_transaction_v1_MemoCiphertext_size depends on runtime parameters */
/* penumbra_core_transaction_v1_MemoPlaintext_size depends on runtime parameters */
/* penumbra_core_transaction_v1_MemoPlaintextView_size depends on runtime parameters */
/* penumbra_core_transaction_v1_MemoView_size depends on runtime parameters */
/* penumbra_core_transaction_v1_MemoView_Visible_size depends on runtime parameters */
/* penumbra_core_transaction_v1_MemoView_Opaque_size depends on runtime parameters */
#if defined(penumbra_core_keys_v1_AddressView_size) && defined(penumbra_core_asset_v1_Balance_size)
#define PENUMBRA_CORE_TRANSACTION_V1_PENUMBRA_CORE_TRANSACTION_V1_TRANSACTION_PB_H_MAX_SIZE \
    penumbra_core_transaction_v1_TransactionSummary_Effects_size
#define penumbra_core_transaction_v1_TransactionSummary_Effects_size \
    (12 + penumbra_core_keys_v1_AddressView_size + penumbra_core_asset_v1_Balance_size)
#endif
#if defined(penumbra_core_component_shielded_pool_v1_Spend_size) &&                                                         \
    defined(penumbra_core_component_shielded_pool_v1_Output_size) && defined(penumbra_core_component_dex_v1_Swap_size) &&   \
    defined(penumbra_core_component_dex_v1_SwapClaim_size) &&                                                               \
    defined(penumbra_core_component_stake_v1_ValidatorDefinition_size) &&                                                   \
    defined(penumbra_core_component_ibc_v1_IbcRelay_size) &&                                                                \
    defined(penumbra_core_component_governance_v1_ProposalSubmit_size) &&                                                   \
    defined(penumbra_core_component_governance_v1_ProposalWithdraw_size) &&                                                 \
    defined(penumbra_core_component_governance_v1_ValidatorVote_size) &&                                                    \
    defined(penumbra_core_component_governance_v1_DelegatorVote_size) &&                                                    \
    defined(penumbra_core_component_governance_v1_ProposalDepositClaim_size) &&                                             \
    defined(penumbra_core_component_dex_v1_PositionOpen_size) &&                                                            \
    defined(penumbra_core_component_dex_v1_PositionClose_size) &&                                                           \
    defined(penumbra_core_component_dex_v1_PositionWithdraw_size) &&                                                        \
    defined(penumbra_core_component_dex_v1_PositionRewardClaim_size) &&                                                     \
    defined(penumbra_core_component_stake_v1_Delegate_size) && defined(penumbra_core_component_stake_v1_Undelegate_size) && \
    defined(penumbra_core_component_stake_v1_UndelegateClaim_size) &&                                                       \
    defined(penumbra_core_component_governance_v1_CommunityPoolSpend_size) &&                                               \
    defined(penumbra_core_component_governance_v1_CommunityPoolOutput_size) &&                                              \
    defined(penumbra_core_component_governance_v1_CommunityPoolDeposit_size) &&                                             \
    defined(penumbra_core_component_auction_v1_ActionDutchAuctionSchedule_size) &&                                          \
    defined(penumbra_core_component_auction_v1_ActionDutchAuctionEnd_size) &&                                               \
    defined(penumbra_core_component_auction_v1_ActionDutchAuctionWithdraw_size) &&                                          \
    defined(penumbra_core_component_ibc_v1_Ics20Withdrawal_size)
#define penumbra_core_transaction_v1_Action_size (0 + sizeof(union penumbra_core_transaction_v1_Action_action_size_union))
#endif
#if defined(penumbra_core_asset_v1_AssetId_size) && defined(google_protobuf_Any_size)
#define penumbra_core_transaction_v1_TransactionPerspective_ExtendedMetadataById_size \
    (12 + penumbra_core_asset_v1_AssetId_size + google_protobuf_Any_size)
#endif
#if defined(penumbra_core_component_sct_v1_Nullifier_size) && defined(penumbra_core_txhash_v1_TransactionId_size)
#define penumbra_core_transaction_v1_TransactionPerspective_CreationTransactionIdByNullifier_size \
    (12 + penumbra_core_component_sct_v1_Nullifier_size + penumbra_core_txhash_v1_TransactionId_size)
#endif
#if defined(penumbra_crypto_tct_v1_StateCommitment_size) && defined(penumbra_core_txhash_v1_TransactionId_size)
#define penumbra_core_transaction_v1_TransactionPerspective_NullificationTransactionIdByCommitment_size \
    (12 + penumbra_crypto_tct_v1_StateCommitment_size + penumbra_core_txhash_v1_TransactionId_size)
#endif
#if defined(penumbra_core_keys_v1_PayloadKey_size) && defined(penumbra_crypto_tct_v1_StateCommitment_size)
#define penumbra_core_transaction_v1_PayloadKeyWithCommitment_size \
    (12 + penumbra_core_keys_v1_PayloadKey_size + penumbra_crypto_tct_v1_StateCommitment_size)
#endif
#if defined(penumbra_core_component_sct_v1_Nullifier_size) && defined(penumbra_core_component_shielded_pool_v1_Note_size)
#define penumbra_core_transaction_v1_NullifierWithNote_size \
    (12 + penumbra_core_component_sct_v1_Nullifier_size + penumbra_core_component_shielded_pool_v1_Note_size)
#endif
#if defined(penumbra_core_component_shielded_pool_v1_SpendView_size) &&                                                     \
    defined(penumbra_core_component_shielded_pool_v1_OutputView_size) &&                                                    \
    defined(penumbra_core_component_dex_v1_SwapView_size) && defined(penumbra_core_component_dex_v1_SwapClaimView_size) &&  \
    defined(penumbra_core_component_stake_v1_ValidatorDefinition_size) &&                                                   \
    defined(penumbra_core_component_ibc_v1_IbcRelay_size) &&                                                                \
    defined(penumbra_core_component_governance_v1_ProposalSubmit_size) &&                                                   \
    defined(penumbra_core_component_governance_v1_ProposalWithdraw_size) &&                                                 \
    defined(penumbra_core_component_governance_v1_ValidatorVote_size) &&                                                    \
    defined(penumbra_core_component_governance_v1_DelegatorVoteView_size) &&                                                \
    defined(penumbra_core_component_governance_v1_ProposalDepositClaim_size) &&                                             \
    defined(penumbra_core_component_dex_v1_PositionOpen_size) &&                                                            \
    defined(penumbra_core_component_dex_v1_PositionClose_size) &&                                                           \
    defined(penumbra_core_component_dex_v1_PositionWithdraw_size) &&                                                        \
    defined(penumbra_core_component_dex_v1_PositionRewardClaim_size) &&                                                     \
    defined(penumbra_core_component_stake_v1_Delegate_size) && defined(penumbra_core_component_stake_v1_Undelegate_size) && \
    defined(penumbra_core_component_stake_v1_UndelegateClaim_size) &&                                                       \
    defined(penumbra_core_component_governance_v1_CommunityPoolSpend_size) &&                                               \
    defined(penumbra_core_component_governance_v1_CommunityPoolOutput_size) &&                                              \
    defined(penumbra_core_component_governance_v1_CommunityPoolDeposit_size) &&                                             \
    defined(penumbra_core_component_auction_v1_ActionDutchAuctionScheduleView_size) &&                                      \
    defined(penumbra_core_component_auction_v1_ActionDutchAuctionEnd_size) &&                                               \
    defined(penumbra_core_component_auction_v1_ActionDutchAuctionWithdrawView_size) &&                                      \
    defined(penumbra_core_component_ibc_v1_Ics20Withdrawal_size)
#define penumbra_core_transaction_v1_ActionView_size \
    (0 + sizeof(union penumbra_core_transaction_v1_ActionView_action_view_size_union))
#endif
#if defined(penumbra_core_component_shielded_pool_v1_SpendPlan_size) &&                                                     \
    defined(penumbra_core_component_shielded_pool_v1_OutputPlan_size) &&                                                    \
    defined(penumbra_core_component_dex_v1_SwapPlan_size) && defined(penumbra_core_component_dex_v1_SwapClaimPlan_size) &&  \
    defined(penumbra_core_component_stake_v1_ValidatorDefinition_size) &&                                                   \
    defined(penumbra_core_component_ibc_v1_IbcRelay_size) &&                                                                \
    defined(penumbra_core_component_governance_v1_ProposalSubmit_size) &&                                                   \
    defined(penumbra_core_component_governance_v1_ProposalWithdraw_size) &&                                                 \
    defined(penumbra_core_component_governance_v1_ValidatorVote_size) &&                                                    \
    defined(penumbra_core_component_governance_v1_DelegatorVotePlan_size) &&                                                \
    defined(penumbra_core_component_governance_v1_ProposalDepositClaim_size) &&                                             \
    defined(penumbra_core_component_dex_v1_PositionOpen_size) &&                                                            \
    defined(penumbra_core_component_dex_v1_PositionClose_size) &&                                                           \
    defined(penumbra_core_component_dex_v1_PositionWithdrawPlan_size) &&                                                    \
    defined(penumbra_core_component_stake_v1_Delegate_size) && defined(penumbra_core_component_stake_v1_Undelegate_size) && \
    defined(penumbra_core_component_stake_v1_UndelegateClaimPlan_size) &&                                                   \
    defined(penumbra_core_component_governance_v1_CommunityPoolSpend_size) &&                                               \
    defined(penumbra_core_component_governance_v1_CommunityPoolOutput_size) &&                                              \
    defined(penumbra_core_component_governance_v1_CommunityPoolDeposit_size) &&                                             \
    defined(penumbra_core_component_auction_v1_ActionDutchAuctionSchedule_size) &&                                          \
    defined(penumbra_core_component_auction_v1_ActionDutchAuctionEnd_size) &&                                               \
    defined(penumbra_core_component_auction_v1_ActionDutchAuctionWithdrawPlan_size) &&                                      \
    defined(penumbra_core_component_ibc_v1_Ics20Withdrawal_size)
#define penumbra_core_transaction_v1_ActionPlan_size \
    (0 + sizeof(union penumbra_core_transaction_v1_ActionPlan_action_size_union))
#endif

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
